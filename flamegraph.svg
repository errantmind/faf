<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="710" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="693.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="693.00"> </text><svg id="frames" x="10" width="1180" total_samples="25978"><g><title>[[heap]] (10 samples, 0.04%)</title><rect x="0.0000%" y="629" width="0.0385%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="10"/><text x="0.2500%" y="639.50"></text></g><g><title>[libc.so.6] (10 samples, 0.04%)</title><rect x="0.0000%" y="613" width="0.0385%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="10"/><text x="0.2500%" y="623.50"></text></g><g><title>ret_from_fork (10 samples, 0.04%)</title><rect x="0.0000%" y="597" width="0.0385%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="10"/><text x="0.2500%" y="607.50"></text></g><g><title>schedule_tail (8 samples, 0.03%)</title><rect x="0.0077%" y="581" width="0.0308%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="8"/><text x="0.2577%" y="591.50"></text></g><g><title>finish_task_switch.isra.0 (8 samples, 0.03%)</title><rect x="0.0077%" y="565" width="0.0308%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="8"/><text x="0.2577%" y="575.50"></text></g><g><title>__perf_event_task_sched_in (8 samples, 0.03%)</title><rect x="0.0077%" y="549" width="0.0308%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="8"/><text x="0.2577%" y="559.50"></text></g><g><title>perf_ctx_enable (8 samples, 0.03%)</title><rect x="0.0077%" y="533" width="0.0308%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="8"/><text x="0.2577%" y="543.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (8 samples, 0.03%)</title><rect x="0.0077%" y="517" width="0.0308%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="8"/><text x="0.2577%" y="527.50"></text></g><g><title>native_write_msr (8 samples, 0.03%)</title><rect x="0.0077%" y="501" width="0.0308%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="8"/><text x="0.2577%" y="511.50"></text></g><g><title>__mmap (5 samples, 0.02%)</title><rect x="0.0385%" y="517" width="0.0192%" height="15" fill="rgb(220,122,19)" fg:x="10" fg:w="5"/><text x="0.2885%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.02%)</title><rect x="0.0385%" y="501" width="0.0192%" height="15" fill="rgb(250,228,42)" fg:x="10" fg:w="5"/><text x="0.2885%" y="511.50"></text></g><g><title>do_syscall_64 (5 samples, 0.02%)</title><rect x="0.0385%" y="485" width="0.0192%" height="15" fill="rgb(240,193,28)" fg:x="10" fg:w="5"/><text x="0.2885%" y="495.50"></text></g><g><title>vm_mmap_pgoff (5 samples, 0.02%)</title><rect x="0.0385%" y="469" width="0.0192%" height="15" fill="rgb(216,20,37)" fg:x="10" fg:w="5"/><text x="0.2885%" y="479.50"></text></g><g><title>down_write_killable (5 samples, 0.02%)</title><rect x="0.0385%" y="453" width="0.0192%" height="15" fill="rgb(206,188,39)" fg:x="10" fg:w="5"/><text x="0.2885%" y="463.50"></text></g><g><title>rwsem_down_write_slowpath (5 samples, 0.02%)</title><rect x="0.0385%" y="437" width="0.0192%" height="15" fill="rgb(217,207,13)" fg:x="10" fg:w="5"/><text x="0.2885%" y="447.50"></text></g><g><title>schedule_preempt_disabled (4 samples, 0.02%)</title><rect x="0.0423%" y="421" width="0.0154%" height="15" fill="rgb(231,73,38)" fg:x="11" fg:w="4"/><text x="0.2923%" y="431.50"></text></g><g><title>schedule (4 samples, 0.02%)</title><rect x="0.0423%" y="405" width="0.0154%" height="15" fill="rgb(225,20,46)" fg:x="11" fg:w="4"/><text x="0.2923%" y="415.50"></text></g><g><title>__schedule (4 samples, 0.02%)</title><rect x="0.0423%" y="389" width="0.0154%" height="15" fill="rgb(210,31,41)" fg:x="11" fg:w="4"/><text x="0.2923%" y="399.50"></text></g><g><title>finish_task_switch.isra.0 (4 samples, 0.02%)</title><rect x="0.0423%" y="373" width="0.0154%" height="15" fill="rgb(221,200,47)" fg:x="11" fg:w="4"/><text x="0.2923%" y="383.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.02%)</title><rect x="0.0423%" y="357" width="0.0154%" height="15" fill="rgb(226,26,5)" fg:x="11" fg:w="4"/><text x="0.2923%" y="367.50"></text></g><g><title>perf_ctx_enable (4 samples, 0.02%)</title><rect x="0.0423%" y="341" width="0.0154%" height="15" fill="rgb(249,33,26)" fg:x="11" fg:w="4"/><text x="0.2923%" y="351.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (4 samples, 0.02%)</title><rect x="0.0423%" y="325" width="0.0154%" height="15" fill="rgb(235,183,28)" fg:x="11" fg:w="4"/><text x="0.2923%" y="335.50"></text></g><g><title>native_write_msr (4 samples, 0.02%)</title><rect x="0.0423%" y="309" width="0.0154%" height="15" fill="rgb(221,5,38)" fg:x="11" fg:w="4"/><text x="0.2923%" y="319.50"></text></g><g><title>down_write_killable (11 samples, 0.04%)</title><rect x="0.0577%" y="437" width="0.0423%" height="15" fill="rgb(247,18,42)" fg:x="15" fg:w="11"/><text x="0.3077%" y="447.50"></text></g><g><title>rwsem_down_write_slowpath (11 samples, 0.04%)</title><rect x="0.0577%" y="421" width="0.0423%" height="15" fill="rgb(241,131,45)" fg:x="15" fg:w="11"/><text x="0.3077%" y="431.50"></text></g><g><title>schedule_preempt_disabled (10 samples, 0.04%)</title><rect x="0.0616%" y="405" width="0.0385%" height="15" fill="rgb(249,31,29)" fg:x="16" fg:w="10"/><text x="0.3116%" y="415.50"></text></g><g><title>schedule (10 samples, 0.04%)</title><rect x="0.0616%" y="389" width="0.0385%" height="15" fill="rgb(225,111,53)" fg:x="16" fg:w="10"/><text x="0.3116%" y="399.50"></text></g><g><title>__schedule (10 samples, 0.04%)</title><rect x="0.0616%" y="373" width="0.0385%" height="15" fill="rgb(238,160,17)" fg:x="16" fg:w="10"/><text x="0.3116%" y="383.50"></text></g><g><title>finish_task_switch.isra.0 (10 samples, 0.04%)</title><rect x="0.0616%" y="357" width="0.0385%" height="15" fill="rgb(214,148,48)" fg:x="16" fg:w="10"/><text x="0.3116%" y="367.50"></text></g><g><title>__perf_event_task_sched_in (10 samples, 0.04%)</title><rect x="0.0616%" y="341" width="0.0385%" height="15" fill="rgb(232,36,49)" fg:x="16" fg:w="10"/><text x="0.3116%" y="351.50"></text></g><g><title>perf_ctx_enable (10 samples, 0.04%)</title><rect x="0.0616%" y="325" width="0.0385%" height="15" fill="rgb(209,103,24)" fg:x="16" fg:w="10"/><text x="0.3116%" y="335.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (9 samples, 0.03%)</title><rect x="0.0654%" y="309" width="0.0346%" height="15" fill="rgb(229,88,8)" fg:x="17" fg:w="9"/><text x="0.3154%" y="319.50"></text></g><g><title>native_write_msr (9 samples, 0.03%)</title><rect x="0.0654%" y="293" width="0.0346%" height="15" fill="rgb(213,181,19)" fg:x="17" fg:w="9"/><text x="0.3154%" y="303.50"></text></g><g><title>[libc.so.6] (17 samples, 0.07%)</title><rect x="0.0385%" y="629" width="0.0654%" height="15" fill="rgb(254,191,54)" fg:x="10" fg:w="17"/><text x="0.2885%" y="639.50"></text></g><g><title>[libc.so.6] (17 samples, 0.07%)</title><rect x="0.0385%" y="613" width="0.0654%" height="15" fill="rgb(241,83,37)" fg:x="10" fg:w="17"/><text x="0.2885%" y="623.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (17 samples, 0.07%)</title><rect x="0.0385%" y="597" width="0.0654%" height="15" fill="rgb(233,36,39)" fg:x="10" fg:w="17"/><text x="0.2885%" y="607.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (17 samples, 0.07%)</title><rect x="0.0385%" y="581" width="0.0654%" height="15" fill="rgb(226,3,54)" fg:x="10" fg:w="17"/><text x="0.2885%" y="591.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (17 samples, 0.07%)</title><rect x="0.0385%" y="565" width="0.0654%" height="15" fill="rgb(245,192,40)" fg:x="10" fg:w="17"/><text x="0.2885%" y="575.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (17 samples, 0.07%)</title><rect x="0.0385%" y="549" width="0.0654%" height="15" fill="rgb(238,167,29)" fg:x="10" fg:w="17"/><text x="0.2885%" y="559.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (17 samples, 0.07%)</title><rect x="0.0385%" y="533" width="0.0654%" height="15" fill="rgb(232,182,51)" fg:x="10" fg:w="17"/><text x="0.2885%" y="543.50"></text></g><g><title>__mprotect (12 samples, 0.05%)</title><rect x="0.0577%" y="517" width="0.0462%" height="15" fill="rgb(231,60,39)" fg:x="15" fg:w="12"/><text x="0.3077%" y="527.50"></text></g><g><title>entry_SYSCALL_64 (12 samples, 0.05%)</title><rect x="0.0577%" y="501" width="0.0462%" height="15" fill="rgb(208,69,12)" fg:x="15" fg:w="12"/><text x="0.3077%" y="511.50"></text></g><g><title>do_syscall_64 (12 samples, 0.05%)</title><rect x="0.0577%" y="485" width="0.0462%" height="15" fill="rgb(235,93,37)" fg:x="15" fg:w="12"/><text x="0.3077%" y="495.50"></text></g><g><title>__x64_sys_mprotect (12 samples, 0.05%)</title><rect x="0.0577%" y="469" width="0.0462%" height="15" fill="rgb(213,116,39)" fg:x="15" fg:w="12"/><text x="0.3077%" y="479.50"></text></g><g><title>do_mprotect_pkey (12 samples, 0.05%)</title><rect x="0.0577%" y="453" width="0.0462%" height="15" fill="rgb(222,207,29)" fg:x="15" fg:w="12"/><text x="0.3077%" y="463.50"></text></g><g><title>ret_from_fork (25 samples, 0.10%)</title><rect x="0.1078%" y="629" width="0.0962%" height="15" fill="rgb(206,96,30)" fg:x="28" fg:w="25"/><text x="0.3578%" y="639.50"></text></g><g><title>schedule_tail (25 samples, 0.10%)</title><rect x="0.1078%" y="613" width="0.0962%" height="15" fill="rgb(218,138,4)" fg:x="28" fg:w="25"/><text x="0.3578%" y="623.50"></text></g><g><title>finish_task_switch.isra.0 (25 samples, 0.10%)</title><rect x="0.1078%" y="597" width="0.0962%" height="15" fill="rgb(250,191,14)" fg:x="28" fg:w="25"/><text x="0.3578%" y="607.50"></text></g><g><title>__perf_event_task_sched_in (24 samples, 0.09%)</title><rect x="0.1116%" y="581" width="0.0924%" height="15" fill="rgb(239,60,40)" fg:x="29" fg:w="24"/><text x="0.3616%" y="591.50"></text></g><g><title>perf_ctx_enable (24 samples, 0.09%)</title><rect x="0.1116%" y="565" width="0.0924%" height="15" fill="rgb(206,27,48)" fg:x="29" fg:w="24"/><text x="0.3616%" y="575.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (23 samples, 0.09%)</title><rect x="0.1155%" y="549" width="0.0885%" height="15" fill="rgb(225,35,8)" fg:x="30" fg:w="23"/><text x="0.3655%" y="559.50"></text></g><g><title>native_write_msr (23 samples, 0.09%)</title><rect x="0.1155%" y="533" width="0.0885%" height="15" fill="rgb(250,213,24)" fg:x="30" fg:w="23"/><text x="0.3655%" y="543.50"></text></g><g><title>faf::http_date::get_http_date (6 samples, 0.02%)</title><rect x="0.2040%" y="581" width="0.0231%" height="15" fill="rgb(247,123,22)" fg:x="53" fg:w="6"/><text x="0.4540%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.02%)</title><rect x="0.2079%" y="565" width="0.0192%" height="15" fill="rgb(231,138,38)" fg:x="54" fg:w="5"/><text x="0.4579%" y="575.50"></text></g><g><title>do_syscall_64 (5 samples, 0.02%)</title><rect x="0.2079%" y="549" width="0.0192%" height="15" fill="rgb(231,145,46)" fg:x="54" fg:w="5"/><text x="0.4579%" y="559.50"></text></g><g><title>__x64_sys_nanosleep (5 samples, 0.02%)</title><rect x="0.2079%" y="533" width="0.0192%" height="15" fill="rgb(251,118,11)" fg:x="54" fg:w="5"/><text x="0.4579%" y="543.50"></text></g><g><title>hrtimer_nanosleep (5 samples, 0.02%)</title><rect x="0.2079%" y="517" width="0.0192%" height="15" fill="rgb(217,147,25)" fg:x="54" fg:w="5"/><text x="0.4579%" y="527.50"></text></g><g><title>do_nanosleep (4 samples, 0.02%)</title><rect x="0.2117%" y="501" width="0.0154%" height="15" fill="rgb(247,81,37)" fg:x="55" fg:w="4"/><text x="0.4617%" y="511.50"></text></g><g><title>schedule (4 samples, 0.02%)</title><rect x="0.2117%" y="485" width="0.0154%" height="15" fill="rgb(209,12,38)" fg:x="55" fg:w="4"/><text x="0.4617%" y="495.50"></text></g><g><title>__schedule (4 samples, 0.02%)</title><rect x="0.2117%" y="469" width="0.0154%" height="15" fill="rgb(227,1,9)" fg:x="55" fg:w="4"/><text x="0.4617%" y="479.50"></text></g><g><title>finish_task_switch.isra.0 (4 samples, 0.02%)</title><rect x="0.2117%" y="453" width="0.0154%" height="15" fill="rgb(248,47,43)" fg:x="55" fg:w="4"/><text x="0.4617%" y="463.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.02%)</title><rect x="0.2117%" y="437" width="0.0154%" height="15" fill="rgb(221,10,30)" fg:x="55" fg:w="4"/><text x="0.4617%" y="447.50"></text></g><g><title>perf_ctx_enable (4 samples, 0.02%)</title><rect x="0.2117%" y="421" width="0.0154%" height="15" fill="rgb(210,229,1)" fg:x="55" fg:w="4"/><text x="0.4617%" y="431.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (4 samples, 0.02%)</title><rect x="0.2117%" y="405" width="0.0154%" height="15" fill="rgb(222,148,37)" fg:x="55" fg:w="4"/><text x="0.4617%" y="415.50"></text></g><g><title>native_write_msr (4 samples, 0.02%)</title><rect x="0.2117%" y="389" width="0.0154%" height="15" fill="rgb(234,67,33)" fg:x="55" fg:w="4"/><text x="0.4617%" y="399.50"></text></g><g><title>faf-ex (65 samples, 0.25%)</title><rect x="0.0000%" y="645" width="0.2502%" height="15" fill="rgb(247,98,35)" fg:x="0" fg:w="65"/><text x="0.2500%" y="655.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.05%)</title><rect x="0.2040%" y="629" width="0.0462%" height="15" fill="rgb(247,138,52)" fg:x="53" fg:w="12"/><text x="0.4540%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.05%)</title><rect x="0.2040%" y="613" width="0.0462%" height="15" fill="rgb(213,79,30)" fg:x="53" fg:w="12"/><text x="0.4540%" y="623.50"></text></g><g><title>faf::epoll::go (12 samples, 0.05%)</title><rect x="0.2040%" y="597" width="0.0462%" height="15" fill="rgb(246,177,23)" fg:x="53" fg:w="12"/><text x="0.4540%" y="607.50"></text></g><g><title>std::thread::Builder::spawn (6 samples, 0.02%)</title><rect x="0.2271%" y="581" width="0.0231%" height="15" fill="rgb(230,62,27)" fg:x="59" fg:w="6"/><text x="0.4771%" y="591.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (6 samples, 0.02%)</title><rect x="0.2271%" y="565" width="0.0231%" height="15" fill="rgb(216,154,8)" fg:x="59" fg:w="6"/><text x="0.4771%" y="575.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (6 samples, 0.02%)</title><rect x="0.2271%" y="549" width="0.0231%" height="15" fill="rgb(244,35,45)" fg:x="59" fg:w="6"/><text x="0.4771%" y="559.50"></text></g><g><title>std::sys::unix::thread::Thread::new (6 samples, 0.02%)</title><rect x="0.2271%" y="533" width="0.0231%" height="15" fill="rgb(251,115,12)" fg:x="59" fg:w="6"/><text x="0.4771%" y="543.50"></text></g><g><title>pthread_create (6 samples, 0.02%)</title><rect x="0.2271%" y="517" width="0.0231%" height="15" fill="rgb(240,54,50)" fg:x="59" fg:w="6"/><text x="0.4771%" y="527.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.02%)</title><rect x="0.2271%" y="501" width="0.0231%" height="15" fill="rgb(233,84,52)" fg:x="59" fg:w="6"/><text x="0.4771%" y="511.50"></text></g><g><title>exc_page_fault (6 samples, 0.02%)</title><rect x="0.2271%" y="485" width="0.0231%" height="15" fill="rgb(207,117,47)" fg:x="59" fg:w="6"/><text x="0.4771%" y="495.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.02%)</title><rect x="0.2271%" y="469" width="0.0231%" height="15" fill="rgb(249,43,39)" fg:x="59" fg:w="6"/><text x="0.4771%" y="479.50"></text></g><g><title>lock_mm_and_find_vma (5 samples, 0.02%)</title><rect x="0.2310%" y="453" width="0.0192%" height="15" fill="rgb(209,38,44)" fg:x="60" fg:w="5"/><text x="0.4810%" y="463.50"></text></g><g><title>down_read_killable (5 samples, 0.02%)</title><rect x="0.2310%" y="437" width="0.0192%" height="15" fill="rgb(236,212,23)" fg:x="60" fg:w="5"/><text x="0.4810%" y="447.50"></text></g><g><title>rwsem_down_read_slowpath (5 samples, 0.02%)</title><rect x="0.2310%" y="421" width="0.0192%" height="15" fill="rgb(242,79,21)" fg:x="60" fg:w="5"/><text x="0.4810%" y="431.50"></text></g><g><title>schedule_preempt_disabled (5 samples, 0.02%)</title><rect x="0.2310%" y="405" width="0.0192%" height="15" fill="rgb(211,96,35)" fg:x="60" fg:w="5"/><text x="0.4810%" y="415.50"></text></g><g><title>schedule (5 samples, 0.02%)</title><rect x="0.2310%" y="389" width="0.0192%" height="15" fill="rgb(253,215,40)" fg:x="60" fg:w="5"/><text x="0.4810%" y="399.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="0.2310%" y="373" width="0.0192%" height="15" fill="rgb(211,81,21)" fg:x="60" fg:w="5"/><text x="0.4810%" y="383.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.02%)</title><rect x="0.2310%" y="357" width="0.0192%" height="15" fill="rgb(208,190,38)" fg:x="60" fg:w="5"/><text x="0.4810%" y="367.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="0.2310%" y="341" width="0.0192%" height="15" fill="rgb(235,213,38)" fg:x="60" fg:w="5"/><text x="0.4810%" y="351.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.02%)</title><rect x="0.2310%" y="325" width="0.0192%" height="15" fill="rgb(237,122,38)" fg:x="60" fg:w="5"/><text x="0.4810%" y="335.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (5 samples, 0.02%)</title><rect x="0.2310%" y="309" width="0.0192%" height="15" fill="rgb(244,218,35)" fg:x="60" fg:w="5"/><text x="0.4810%" y="319.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="0.2310%" y="293" width="0.0192%" height="15" fill="rgb(240,68,47)" fg:x="60" fg:w="5"/><text x="0.4810%" y="303.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.02%)</title><rect x="0.2541%" y="517" width="0.0192%" height="15" fill="rgb(210,16,53)" fg:x="66" fg:w="5"/><text x="0.5041%" y="527.50"></text></g><g><title>std::panicking::try (5 samples, 0.02%)</title><rect x="0.2541%" y="501" width="0.0192%" height="15" fill="rgb(235,124,12)" fg:x="66" fg:w="5"/><text x="0.5041%" y="511.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.02%)</title><rect x="0.2541%" y="485" width="0.0192%" height="15" fill="rgb(224,169,11)" fg:x="66" fg:w="5"/><text x="0.5041%" y="495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.02%)</title><rect x="0.2541%" y="469" width="0.0192%" height="15" fill="rgb(250,166,2)" fg:x="66" fg:w="5"/><text x="0.5041%" y="479.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (5 samples, 0.02%)</title><rect x="0.2541%" y="453" width="0.0192%" height="15" fill="rgb(242,216,29)" fg:x="66" fg:w="5"/><text x="0.5041%" y="463.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.02%)</title><rect x="0.2541%" y="437" width="0.0192%" height="15" fill="rgb(230,116,27)" fg:x="66" fg:w="5"/><text x="0.5041%" y="447.50"></text></g><g><title>faf::epoll::go::{{closure}} (5 samples, 0.02%)</title><rect x="0.2541%" y="421" width="0.0192%" height="15" fill="rgb(228,99,48)" fg:x="66" fg:w="5"/><text x="0.5041%" y="431.50"></text></g><g><title>faf::util::set_current_thread_cpu_affinity_to (5 samples, 0.02%)</title><rect x="0.2541%" y="405" width="0.0192%" height="15" fill="rgb(253,11,6)" fg:x="66" fg:w="5"/><text x="0.5041%" y="415.50"></text></g><g><title>sched_setaffinity (5 samples, 0.02%)</title><rect x="0.2541%" y="389" width="0.0192%" height="15" fill="rgb(247,143,39)" fg:x="66" fg:w="5"/><text x="0.5041%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.02%)</title><rect x="0.2541%" y="373" width="0.0192%" height="15" fill="rgb(236,97,10)" fg:x="66" fg:w="5"/><text x="0.5041%" y="383.50"></text></g><g><title>do_syscall_64 (5 samples, 0.02%)</title><rect x="0.2541%" y="357" width="0.0192%" height="15" fill="rgb(233,208,19)" fg:x="66" fg:w="5"/><text x="0.5041%" y="367.50"></text></g><g><title>__x64_sys_sched_setaffinity (5 samples, 0.02%)</title><rect x="0.2541%" y="341" width="0.0192%" height="15" fill="rgb(216,164,2)" fg:x="66" fg:w="5"/><text x="0.5041%" y="351.50"></text></g><g><title>sched_setaffinity (5 samples, 0.02%)</title><rect x="0.2541%" y="325" width="0.0192%" height="15" fill="rgb(220,129,5)" fg:x="66" fg:w="5"/><text x="0.5041%" y="335.50"></text></g><g><title>__sched_setaffinity (5 samples, 0.02%)</title><rect x="0.2541%" y="309" width="0.0192%" height="15" fill="rgb(242,17,10)" fg:x="66" fg:w="5"/><text x="0.5041%" y="319.50"></text></g><g><title>__set_cpus_allowed_ptr (5 samples, 0.02%)</title><rect x="0.2541%" y="293" width="0.0192%" height="15" fill="rgb(242,107,0)" fg:x="66" fg:w="5"/><text x="0.5041%" y="303.50"></text></g><g><title>affine_move_task (5 samples, 0.02%)</title><rect x="0.2541%" y="277" width="0.0192%" height="15" fill="rgb(251,28,31)" fg:x="66" fg:w="5"/><text x="0.5041%" y="287.50"></text></g><g><title>cpu_stop_queue_work (5 samples, 0.02%)</title><rect x="0.2541%" y="261" width="0.0192%" height="15" fill="rgb(233,223,10)" fg:x="66" fg:w="5"/><text x="0.5041%" y="271.50"></text></g><g><title>preempt_schedule_thunk (5 samples, 0.02%)</title><rect x="0.2541%" y="245" width="0.0192%" height="15" fill="rgb(215,21,27)" fg:x="66" fg:w="5"/><text x="0.5041%" y="255.50"></text></g><g><title>preempt_schedule (5 samples, 0.02%)</title><rect x="0.2541%" y="229" width="0.0192%" height="15" fill="rgb(232,23,21)" fg:x="66" fg:w="5"/><text x="0.5041%" y="239.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="0.2541%" y="213" width="0.0192%" height="15" fill="rgb(244,5,23)" fg:x="66" fg:w="5"/><text x="0.5041%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.02%)</title><rect x="0.2541%" y="197" width="0.0192%" height="15" fill="rgb(226,81,46)" fg:x="66" fg:w="5"/><text x="0.5041%" y="207.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="0.2541%" y="181" width="0.0192%" height="15" fill="rgb(247,70,30)" fg:x="66" fg:w="5"/><text x="0.5041%" y="191.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.02%)</title><rect x="0.2541%" y="165" width="0.0192%" height="15" fill="rgb(212,68,19)" fg:x="66" fg:w="5"/><text x="0.5041%" y="175.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (5 samples, 0.02%)</title><rect x="0.2541%" y="149" width="0.0192%" height="15" fill="rgb(240,187,13)" fg:x="66" fg:w="5"/><text x="0.5041%" y="159.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="0.2541%" y="133" width="0.0192%" height="15" fill="rgb(223,113,26)" fg:x="66" fg:w="5"/><text x="0.5041%" y="143.50"></text></g><g><title>[libc.so.6] (12 samples, 0.05%)</title><rect x="0.2541%" y="629" width="0.0462%" height="15" fill="rgb(206,192,2)" fg:x="66" fg:w="12"/><text x="0.5041%" y="639.50"></text></g><g><title>[libc.so.6] (12 samples, 0.05%)</title><rect x="0.2541%" y="613" width="0.0462%" height="15" fill="rgb(241,108,4)" fg:x="66" fg:w="12"/><text x="0.5041%" y="623.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (12 samples, 0.05%)</title><rect x="0.2541%" y="597" width="0.0462%" height="15" fill="rgb(247,173,49)" fg:x="66" fg:w="12"/><text x="0.5041%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.05%)</title><rect x="0.2541%" y="581" width="0.0462%" height="15" fill="rgb(224,114,35)" fg:x="66" fg:w="12"/><text x="0.5041%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.05%)</title><rect x="0.2541%" y="565" width="0.0462%" height="15" fill="rgb(245,159,27)" fg:x="66" fg:w="12"/><text x="0.5041%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (12 samples, 0.05%)</title><rect x="0.2541%" y="549" width="0.0462%" height="15" fill="rgb(245,172,44)" fg:x="66" fg:w="12"/><text x="0.5041%" y="559.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (12 samples, 0.05%)</title><rect x="0.2541%" y="533" width="0.0462%" height="15" fill="rgb(236,23,11)" fg:x="66" fg:w="12"/><text x="0.5041%" y="543.50"></text></g><g><title>std::sys::unix::thread::guard::current (7 samples, 0.03%)</title><rect x="0.2733%" y="517" width="0.0269%" height="15" fill="rgb(205,117,38)" fg:x="71" fg:w="7"/><text x="0.5233%" y="527.50"></text></g><g><title>pthread_getattr_np (7 samples, 0.03%)</title><rect x="0.2733%" y="501" width="0.0269%" height="15" fill="rgb(237,72,25)" fg:x="71" fg:w="7"/><text x="0.5233%" y="511.50"></text></g><g><title>malloc (7 samples, 0.03%)</title><rect x="0.2733%" y="485" width="0.0269%" height="15" fill="rgb(244,70,9)" fg:x="71" fg:w="7"/><text x="0.5233%" y="495.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="0.2733%" y="469" width="0.0269%" height="15" fill="rgb(217,125,39)" fg:x="71" fg:w="7"/><text x="0.5233%" y="479.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="0.2733%" y="453" width="0.0269%" height="15" fill="rgb(235,36,10)" fg:x="71" fg:w="7"/><text x="0.5233%" y="463.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="0.2733%" y="437" width="0.0269%" height="15" fill="rgb(251,123,47)" fg:x="71" fg:w="7"/><text x="0.5233%" y="447.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.02%)</title><rect x="0.2810%" y="421" width="0.0192%" height="15" fill="rgb(221,13,13)" fg:x="73" fg:w="5"/><text x="0.5310%" y="431.50"></text></g><g><title>exc_page_fault (5 samples, 0.02%)</title><rect x="0.2810%" y="405" width="0.0192%" height="15" fill="rgb(238,131,9)" fg:x="73" fg:w="5"/><text x="0.5310%" y="415.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.02%)</title><rect x="0.2810%" y="389" width="0.0192%" height="15" fill="rgb(211,50,8)" fg:x="73" fg:w="5"/><text x="0.5310%" y="399.50"></text></g><g><title>lock_mm_and_find_vma (5 samples, 0.02%)</title><rect x="0.2810%" y="373" width="0.0192%" height="15" fill="rgb(245,182,24)" fg:x="73" fg:w="5"/><text x="0.5310%" y="383.50"></text></g><g><title>down_read_killable (5 samples, 0.02%)</title><rect x="0.2810%" y="357" width="0.0192%" height="15" fill="rgb(242,14,37)" fg:x="73" fg:w="5"/><text x="0.5310%" y="367.50"></text></g><g><title>rwsem_down_read_slowpath (5 samples, 0.02%)</title><rect x="0.2810%" y="341" width="0.0192%" height="15" fill="rgb(246,228,12)" fg:x="73" fg:w="5"/><text x="0.5310%" y="351.50"></text></g><g><title>schedule_preempt_disabled (5 samples, 0.02%)</title><rect x="0.2810%" y="325" width="0.0192%" height="15" fill="rgb(213,55,15)" fg:x="73" fg:w="5"/><text x="0.5310%" y="335.50"></text></g><g><title>schedule (5 samples, 0.02%)</title><rect x="0.2810%" y="309" width="0.0192%" height="15" fill="rgb(209,9,3)" fg:x="73" fg:w="5"/><text x="0.5310%" y="319.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="0.2810%" y="293" width="0.0192%" height="15" fill="rgb(230,59,30)" fg:x="73" fg:w="5"/><text x="0.5310%" y="303.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.02%)</title><rect x="0.2810%" y="277" width="0.0192%" height="15" fill="rgb(209,121,21)" fg:x="73" fg:w="5"/><text x="0.5310%" y="287.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="0.2810%" y="261" width="0.0192%" height="15" fill="rgb(220,109,13)" fg:x="73" fg:w="5"/><text x="0.5310%" y="271.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.02%)</title><rect x="0.2810%" y="245" width="0.0192%" height="15" fill="rgb(232,18,1)" fg:x="73" fg:w="5"/><text x="0.5310%" y="255.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (5 samples, 0.02%)</title><rect x="0.2810%" y="229" width="0.0192%" height="15" fill="rgb(215,41,42)" fg:x="73" fg:w="5"/><text x="0.5310%" y="239.50"></text></g><g><title>native_write_msr (5 samples, 0.02%)</title><rect x="0.2810%" y="213" width="0.0192%" height="15" fill="rgb(224,123,36)" fg:x="73" fg:w="5"/><text x="0.5310%" y="223.50"></text></g><g><title>faf1 (15 samples, 0.06%)</title><rect x="0.2541%" y="645" width="0.0577%" height="15" fill="rgb(240,125,3)" fg:x="66" fg:w="15"/><text x="0.5041%" y="655.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="0.3118%" y="629" width="0.0192%" height="15" fill="rgb(205,98,50)" fg:x="81" fg:w="5"/><text x="0.5618%" y="639.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="0.3118%" y="613" width="0.0192%" height="15" fill="rgb(205,185,37)" fg:x="81" fg:w="5"/><text x="0.5618%" y="623.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5 samples, 0.02%)</title><rect x="0.3118%" y="597" width="0.0192%" height="15" fill="rgb(238,207,15)" fg:x="81" fg:w="5"/><text x="0.5618%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.02%)</title><rect x="0.3118%" y="581" width="0.0192%" height="15" fill="rgb(213,199,42)" fg:x="81" fg:w="5"/><text x="0.5618%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.02%)</title><rect x="0.3118%" y="565" width="0.0192%" height="15" fill="rgb(235,201,11)" fg:x="81" fg:w="5"/><text x="0.5618%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.02%)</title><rect x="0.3118%" y="549" width="0.0192%" height="15" fill="rgb(207,46,11)" fg:x="81" fg:w="5"/><text x="0.5618%" y="559.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (5 samples, 0.02%)</title><rect x="0.3118%" y="533" width="0.0192%" height="15" fill="rgb(241,35,35)" fg:x="81" fg:w="5"/><text x="0.5618%" y="543.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.02%)</title><rect x="0.3118%" y="517" width="0.0192%" height="15" fill="rgb(243,32,47)" fg:x="81" fg:w="5"/><text x="0.5618%" y="527.50"></text></g><g><title>std::panicking::try (5 samples, 0.02%)</title><rect x="0.3118%" y="501" width="0.0192%" height="15" fill="rgb(247,202,23)" fg:x="81" fg:w="5"/><text x="0.5618%" y="511.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.02%)</title><rect x="0.3118%" y="485" width="0.0192%" height="15" fill="rgb(219,102,11)" fg:x="81" fg:w="5"/><text x="0.5618%" y="495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.02%)</title><rect x="0.3118%" y="469" width="0.0192%" height="15" fill="rgb(243,110,44)" fg:x="81" fg:w="5"/><text x="0.5618%" y="479.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (5 samples, 0.02%)</title><rect x="0.3118%" y="453" width="0.0192%" height="15" fill="rgb(222,74,54)" fg:x="81" fg:w="5"/><text x="0.5618%" y="463.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.02%)</title><rect x="0.3118%" y="437" width="0.0192%" height="15" fill="rgb(216,99,12)" fg:x="81" fg:w="5"/><text x="0.5618%" y="447.50"></text></g><g><title>faf::epoll::go::{{closure}} (5 samples, 0.02%)</title><rect x="0.3118%" y="421" width="0.0192%" height="15" fill="rgb(226,22,26)" fg:x="81" fg:w="5"/><text x="0.5618%" y="431.50"></text></g><g><title>faf::util::set_current_thread_cpu_affinity_to (5 samples, 0.02%)</title><rect x="0.3118%" y="405" width="0.0192%" height="15" fill="rgb(217,163,10)" fg:x="81" fg:w="5"/><text x="0.5618%" y="415.50"></text></g><g><title>sched_setaffinity (5 samples, 0.02%)</title><rect x="0.3118%" y="389" width="0.0192%" height="15" fill="rgb(213,25,53)" fg:x="81" fg:w="5"/><text x="0.5618%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.02%)</title><rect x="0.3118%" y="373" width="0.0192%" height="15" fill="rgb(252,105,26)" fg:x="81" fg:w="5"/><text x="0.5618%" y="383.50"></text></g><g><title>do_syscall_64 (5 samples, 0.02%)</title><rect x="0.3118%" y="357" width="0.0192%" height="15" fill="rgb(220,39,43)" fg:x="81" fg:w="5"/><text x="0.5618%" y="367.50"></text></g><g><title>__x64_sys_sched_setaffinity (5 samples, 0.02%)</title><rect x="0.3118%" y="341" width="0.0192%" height="15" fill="rgb(229,68,48)" fg:x="81" fg:w="5"/><text x="0.5618%" y="351.50"></text></g><g><title>sched_setaffinity (5 samples, 0.02%)</title><rect x="0.3118%" y="325" width="0.0192%" height="15" fill="rgb(252,8,32)" fg:x="81" fg:w="5"/><text x="0.5618%" y="335.50"></text></g><g><title>__sched_setaffinity (5 samples, 0.02%)</title><rect x="0.3118%" y="309" width="0.0192%" height="15" fill="rgb(223,20,43)" fg:x="81" fg:w="5"/><text x="0.5618%" y="319.50"></text></g><g><title>__set_cpus_allowed_ptr (5 samples, 0.02%)</title><rect x="0.3118%" y="293" width="0.0192%" height="15" fill="rgb(229,81,49)" fg:x="81" fg:w="5"/><text x="0.5618%" y="303.50"></text></g><g><title>affine_move_task (5 samples, 0.02%)</title><rect x="0.3118%" y="277" width="0.0192%" height="15" fill="rgb(236,28,36)" fg:x="81" fg:w="5"/><text x="0.5618%" y="287.50"></text></g><g><title>cpu_stop_queue_work (5 samples, 0.02%)</title><rect x="0.3118%" y="261" width="0.0192%" height="15" fill="rgb(249,185,26)" fg:x="81" fg:w="5"/><text x="0.5618%" y="271.50"></text></g><g><title>preempt_schedule_thunk (4 samples, 0.02%)</title><rect x="0.3157%" y="245" width="0.0154%" height="15" fill="rgb(249,174,33)" fg:x="82" fg:w="4"/><text x="0.5657%" y="255.50"></text></g><g><title>preempt_schedule (4 samples, 0.02%)</title><rect x="0.3157%" y="229" width="0.0154%" height="15" fill="rgb(233,201,37)" fg:x="82" fg:w="4"/><text x="0.5657%" y="239.50"></text></g><g><title>__schedule (4 samples, 0.02%)</title><rect x="0.3157%" y="213" width="0.0154%" height="15" fill="rgb(221,78,26)" fg:x="82" fg:w="4"/><text x="0.5657%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (4 samples, 0.02%)</title><rect x="0.3157%" y="197" width="0.0154%" height="15" fill="rgb(250,127,30)" fg:x="82" fg:w="4"/><text x="0.5657%" y="207.50"></text></g><g><title>__perf_event_task_sched_in (4 samples, 0.02%)</title><rect x="0.3157%" y="181" width="0.0154%" height="15" fill="rgb(230,49,44)" fg:x="82" fg:w="4"/><text x="0.5657%" y="191.50"></text></g><g><title>perf_ctx_enable (4 samples, 0.02%)</title><rect x="0.3157%" y="165" width="0.0154%" height="15" fill="rgb(229,67,23)" fg:x="82" fg:w="4"/><text x="0.5657%" y="175.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (4 samples, 0.02%)</title><rect x="0.3157%" y="149" width="0.0154%" height="15" fill="rgb(249,83,47)" fg:x="82" fg:w="4"/><text x="0.5657%" y="159.50"></text></g><g><title>native_write_msr (4 samples, 0.02%)</title><rect x="0.3157%" y="133" width="0.0154%" height="15" fill="rgb(215,43,3)" fg:x="82" fg:w="4"/><text x="0.5657%" y="143.50"></text></g><g><title>faf2 (7 samples, 0.03%)</title><rect x="0.3118%" y="645" width="0.0269%" height="15" fill="rgb(238,154,13)" fg:x="81" fg:w="7"/><text x="0.5618%" y="655.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.02%)</title><rect x="0.3387%" y="517" width="0.0192%" height="15" fill="rgb(219,56,2)" fg:x="88" fg:w="5"/><text x="0.5887%" y="527.50"></text></g><g><title>std::panicking::try (5 samples, 0.02%)</title><rect x="0.3387%" y="501" width="0.0192%" height="15" fill="rgb(233,0,4)" fg:x="88" fg:w="5"/><text x="0.5887%" y="511.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.02%)</title><rect x="0.3387%" y="485" width="0.0192%" height="15" fill="rgb(235,30,7)" fg:x="88" fg:w="5"/><text x="0.5887%" y="495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.02%)</title><rect x="0.3387%" y="469" width="0.0192%" height="15" fill="rgb(250,79,13)" fg:x="88" fg:w="5"/><text x="0.5887%" y="479.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (5 samples, 0.02%)</title><rect x="0.3387%" y="453" width="0.0192%" height="15" fill="rgb(211,146,34)" fg:x="88" fg:w="5"/><text x="0.5887%" y="463.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.02%)</title><rect x="0.3387%" y="437" width="0.0192%" height="15" fill="rgb(228,22,38)" fg:x="88" fg:w="5"/><text x="0.5887%" y="447.50"></text></g><g><title>faf::epoll::go::{{closure}} (5 samples, 0.02%)</title><rect x="0.3387%" y="421" width="0.0192%" height="15" fill="rgb(235,168,5)" fg:x="88" fg:w="5"/><text x="0.5887%" y="431.50"></text></g><g><title>faf::util::set_current_thread_cpu_affinity_to (5 samples, 0.02%)</title><rect x="0.3387%" y="405" width="0.0192%" height="15" fill="rgb(221,155,16)" fg:x="88" fg:w="5"/><text x="0.5887%" y="415.50"></text></g><g><title>sched_setaffinity (5 samples, 0.02%)</title><rect x="0.3387%" y="389" width="0.0192%" height="15" fill="rgb(215,215,53)" fg:x="88" fg:w="5"/><text x="0.5887%" y="399.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.02%)</title><rect x="0.3387%" y="373" width="0.0192%" height="15" fill="rgb(223,4,10)" fg:x="88" fg:w="5"/><text x="0.5887%" y="383.50"></text></g><g><title>do_syscall_64 (5 samples, 0.02%)</title><rect x="0.3387%" y="357" width="0.0192%" height="15" fill="rgb(234,103,6)" fg:x="88" fg:w="5"/><text x="0.5887%" y="367.50"></text></g><g><title>__x64_sys_sched_setaffinity (5 samples, 0.02%)</title><rect x="0.3387%" y="341" width="0.0192%" height="15" fill="rgb(227,97,0)" fg:x="88" fg:w="5"/><text x="0.5887%" y="351.50"></text></g><g><title>sched_setaffinity (5 samples, 0.02%)</title><rect x="0.3387%" y="325" width="0.0192%" height="15" fill="rgb(234,150,53)" fg:x="88" fg:w="5"/><text x="0.5887%" y="335.50"></text></g><g><title>__sched_setaffinity (5 samples, 0.02%)</title><rect x="0.3387%" y="309" width="0.0192%" height="15" fill="rgb(228,201,54)" fg:x="88" fg:w="5"/><text x="0.5887%" y="319.50"></text></g><g><title>__set_cpus_allowed_ptr (5 samples, 0.02%)</title><rect x="0.3387%" y="293" width="0.0192%" height="15" fill="rgb(222,22,37)" fg:x="88" fg:w="5"/><text x="0.5887%" y="303.50"></text></g><g><title>affine_move_task (5 samples, 0.02%)</title><rect x="0.3387%" y="277" width="0.0192%" height="15" fill="rgb(237,53,32)" fg:x="88" fg:w="5"/><text x="0.5887%" y="287.50"></text></g><g><title>cpu_stop_queue_work (5 samples, 0.02%)</title><rect x="0.3387%" y="261" width="0.0192%" height="15" fill="rgb(233,25,53)" fg:x="88" fg:w="5"/><text x="0.5887%" y="271.50"></text></g><g><title>preempt_schedule_thunk (5 samples, 0.02%)</title><rect x="0.3387%" y="245" width="0.0192%" height="15" fill="rgb(210,40,34)" fg:x="88" fg:w="5"/><text x="0.5887%" y="255.50"></text></g><g><title>preempt_schedule (5 samples, 0.02%)</title><rect x="0.3387%" y="229" width="0.0192%" height="15" fill="rgb(241,220,44)" fg:x="88" fg:w="5"/><text x="0.5887%" y="239.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="0.3387%" y="213" width="0.0192%" height="15" fill="rgb(235,28,35)" fg:x="88" fg:w="5"/><text x="0.5887%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.02%)</title><rect x="0.3387%" y="197" width="0.0192%" height="15" fill="rgb(210,56,17)" fg:x="88" fg:w="5"/><text x="0.5887%" y="207.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="0.3387%" y="181" width="0.0192%" height="15" fill="rgb(224,130,29)" fg:x="88" fg:w="5"/><text x="0.5887%" y="191.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.02%)</title><rect x="0.3387%" y="165" width="0.0192%" height="15" fill="rgb(235,212,8)" fg:x="88" fg:w="5"/><text x="0.5887%" y="175.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (4 samples, 0.02%)</title><rect x="0.3426%" y="149" width="0.0154%" height="15" fill="rgb(223,33,50)" fg:x="89" fg:w="4"/><text x="0.5926%" y="159.50"></text></g><g><title>native_write_msr (4 samples, 0.02%)</title><rect x="0.3426%" y="133" width="0.0154%" height="15" fill="rgb(219,149,13)" fg:x="89" fg:w="4"/><text x="0.5926%" y="143.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="0.3387%" y="629" width="0.0231%" height="15" fill="rgb(250,156,29)" fg:x="88" fg:w="6"/><text x="0.5887%" y="639.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="0.3387%" y="613" width="0.0231%" height="15" fill="rgb(216,193,19)" fg:x="88" fg:w="6"/><text x="0.5887%" y="623.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (6 samples, 0.02%)</title><rect x="0.3387%" y="597" width="0.0231%" height="15" fill="rgb(216,135,14)" fg:x="88" fg:w="6"/><text x="0.5887%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="0.3387%" y="581" width="0.0231%" height="15" fill="rgb(241,47,5)" fg:x="88" fg:w="6"/><text x="0.5887%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="0.3387%" y="565" width="0.0231%" height="15" fill="rgb(233,42,35)" fg:x="88" fg:w="6"/><text x="0.5887%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (6 samples, 0.02%)</title><rect x="0.3387%" y="549" width="0.0231%" height="15" fill="rgb(231,13,6)" fg:x="88" fg:w="6"/><text x="0.5887%" y="559.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (6 samples, 0.02%)</title><rect x="0.3387%" y="533" width="0.0231%" height="15" fill="rgb(207,181,40)" fg:x="88" fg:w="6"/><text x="0.5887%" y="543.50"></text></g><g><title>faf3 (8 samples, 0.03%)</title><rect x="0.3387%" y="645" width="0.0308%" height="15" fill="rgb(254,173,49)" fg:x="88" fg:w="8"/><text x="0.5887%" y="655.50"></text></g><g><title>faf4 (7 samples, 0.03%)</title><rect x="0.3695%" y="645" width="0.0269%" height="15" fill="rgb(221,1,38)" fg:x="96" fg:w="7"/><text x="0.6195%" y="655.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="0.3695%" y="629" width="0.0269%" height="15" fill="rgb(206,124,46)" fg:x="96" fg:w="7"/><text x="0.6195%" y="639.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="0.3695%" y="613" width="0.0269%" height="15" fill="rgb(249,21,11)" fg:x="96" fg:w="7"/><text x="0.6195%" y="623.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (7 samples, 0.03%)</title><rect x="0.3695%" y="597" width="0.0269%" height="15" fill="rgb(222,201,40)" fg:x="96" fg:w="7"/><text x="0.6195%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.03%)</title><rect x="0.3695%" y="581" width="0.0269%" height="15" fill="rgb(235,61,29)" fg:x="96" fg:w="7"/><text x="0.6195%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.03%)</title><rect x="0.3695%" y="565" width="0.0269%" height="15" fill="rgb(219,207,3)" fg:x="96" fg:w="7"/><text x="0.6195%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (7 samples, 0.03%)</title><rect x="0.3695%" y="549" width="0.0269%" height="15" fill="rgb(222,56,46)" fg:x="96" fg:w="7"/><text x="0.6195%" y="559.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (7 samples, 0.03%)</title><rect x="0.3695%" y="533" width="0.0269%" height="15" fill="rgb(239,76,54)" fg:x="96" fg:w="7"/><text x="0.6195%" y="543.50"></text></g><g><title>std::sys::unix::thread::guard::current (6 samples, 0.02%)</title><rect x="0.3734%" y="517" width="0.0231%" height="15" fill="rgb(231,124,27)" fg:x="97" fg:w="6"/><text x="0.6234%" y="527.50"></text></g><g><title>pthread_getattr_np (6 samples, 0.02%)</title><rect x="0.3734%" y="501" width="0.0231%" height="15" fill="rgb(249,195,6)" fg:x="97" fg:w="6"/><text x="0.6234%" y="511.50"></text></g><g><title>malloc (6 samples, 0.02%)</title><rect x="0.3734%" y="485" width="0.0231%" height="15" fill="rgb(237,174,47)" fg:x="97" fg:w="6"/><text x="0.6234%" y="495.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="0.3734%" y="469" width="0.0231%" height="15" fill="rgb(206,201,31)" fg:x="97" fg:w="6"/><text x="0.6234%" y="479.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="0.3734%" y="453" width="0.0231%" height="15" fill="rgb(231,57,52)" fg:x="97" fg:w="6"/><text x="0.6234%" y="463.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="0.3734%" y="437" width="0.0231%" height="15" fill="rgb(248,177,22)" fg:x="97" fg:w="6"/><text x="0.6234%" y="447.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.02%)</title><rect x="0.3772%" y="421" width="0.0192%" height="15" fill="rgb(215,211,37)" fg:x="98" fg:w="5"/><text x="0.6272%" y="431.50"></text></g><g><title>exc_page_fault (5 samples, 0.02%)</title><rect x="0.3772%" y="405" width="0.0192%" height="15" fill="rgb(241,128,51)" fg:x="98" fg:w="5"/><text x="0.6272%" y="415.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.02%)</title><rect x="0.3772%" y="389" width="0.0192%" height="15" fill="rgb(227,165,31)" fg:x="98" fg:w="5"/><text x="0.6272%" y="399.50"></text></g><g><title>lock_mm_and_find_vma (5 samples, 0.02%)</title><rect x="0.3772%" y="373" width="0.0192%" height="15" fill="rgb(228,167,24)" fg:x="98" fg:w="5"/><text x="0.6272%" y="383.50"></text></g><g><title>down_read_killable (5 samples, 0.02%)</title><rect x="0.3772%" y="357" width="0.0192%" height="15" fill="rgb(228,143,12)" fg:x="98" fg:w="5"/><text x="0.6272%" y="367.50"></text></g><g><title>rwsem_down_read_slowpath (5 samples, 0.02%)</title><rect x="0.3772%" y="341" width="0.0192%" height="15" fill="rgb(249,149,8)" fg:x="98" fg:w="5"/><text x="0.6272%" y="351.50"></text></g><g><title>schedule_preempt_disabled (5 samples, 0.02%)</title><rect x="0.3772%" y="325" width="0.0192%" height="15" fill="rgb(243,35,44)" fg:x="98" fg:w="5"/><text x="0.6272%" y="335.50"></text></g><g><title>schedule (5 samples, 0.02%)</title><rect x="0.3772%" y="309" width="0.0192%" height="15" fill="rgb(246,89,9)" fg:x="98" fg:w="5"/><text x="0.6272%" y="319.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="0.3772%" y="293" width="0.0192%" height="15" fill="rgb(233,213,13)" fg:x="98" fg:w="5"/><text x="0.6272%" y="303.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.02%)</title><rect x="0.3772%" y="277" width="0.0192%" height="15" fill="rgb(233,141,41)" fg:x="98" fg:w="5"/><text x="0.6272%" y="287.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.02%)</title><rect x="0.3772%" y="261" width="0.0192%" height="15" fill="rgb(239,167,4)" fg:x="98" fg:w="5"/><text x="0.6272%" y="271.50"></text></g><g><title>perf_ctx_enable (4 samples, 0.02%)</title><rect x="0.3811%" y="245" width="0.0154%" height="15" fill="rgb(209,217,16)" fg:x="99" fg:w="4"/><text x="0.6311%" y="255.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (4 samples, 0.02%)</title><rect x="0.3811%" y="229" width="0.0154%" height="15" fill="rgb(219,88,35)" fg:x="99" fg:w="4"/><text x="0.6311%" y="239.50"></text></g><g><title>native_write_msr (4 samples, 0.02%)</title><rect x="0.3811%" y="213" width="0.0154%" height="15" fill="rgb(220,193,23)" fg:x="99" fg:w="4"/><text x="0.6311%" y="223.50"></text></g><g><title>faf5 (3 samples, 0.01%)</title><rect x="0.3965%" y="645" width="0.0115%" height="15" fill="rgb(230,90,52)" fg:x="103" fg:w="3"/><text x="0.6465%" y="655.50"></text></g><g><title>&lt;isize as core::ops::arith::Add&gt;::add (6 samples, 0.02%)</title><rect x="1.8708%" y="597" width="0.0231%" height="15" fill="rgb(252,106,19)" fg:x="486" fg:w="6"/><text x="2.1208%" y="607.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.01%)</title><rect x="1.8939%" y="597" width="0.0115%" height="15" fill="rgb(206,74,20)" fg:x="492" fg:w="3"/><text x="2.1439%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.01%)</title><rect x="1.8939%" y="581" width="0.0115%" height="15" fill="rgb(230,138,44)" fg:x="492" fg:w="3"/><text x="2.1439%" y="591.50"></text></g><g><title>__fdget (8 samples, 0.03%)</title><rect x="4.6308%" y="533" width="0.0308%" height="15" fill="rgb(235,182,43)" fg:x="1203" fg:w="8"/><text x="4.8808%" y="543.50"></text></g><g><title>__fget_light (147 samples, 0.57%)</title><rect x="4.6616%" y="533" width="0.5659%" height="15" fill="rgb(242,16,51)" fg:x="1211" fg:w="147"/><text x="4.9116%" y="543.50"></text></g><g><title>__list_add_valid (25 samples, 0.10%)</title><rect x="5.2275%" y="533" width="0.0962%" height="15" fill="rgb(248,9,4)" fg:x="1358" fg:w="25"/><text x="5.4775%" y="543.50"></text></g><g><title>__list_del_entry_valid (19 samples, 0.07%)</title><rect x="5.3237%" y="533" width="0.0731%" height="15" fill="rgb(210,31,22)" fg:x="1383" fg:w="19"/><text x="5.5737%" y="543.50"></text></g><g><title>__put_user_nocheck_4 (39 samples, 0.15%)</title><rect x="5.3969%" y="533" width="0.1501%" height="15" fill="rgb(239,54,39)" fg:x="1402" fg:w="39"/><text x="5.6469%" y="543.50"></text></g><g><title>__put_user_nocheck_8 (46 samples, 0.18%)</title><rect x="5.5470%" y="533" width="0.1771%" height="15" fill="rgb(230,99,41)" fg:x="1441" fg:w="46"/><text x="5.7970%" y="543.50"></text></g><g><title>_raw_write_lock_irq (134 samples, 0.52%)</title><rect x="5.7241%" y="533" width="0.5158%" height="15" fill="rgb(253,106,12)" fg:x="1487" fg:w="134"/><text x="5.9741%" y="543.50"></text></g><g><title>_raw_write_unlock_irq (54 samples, 0.21%)</title><rect x="6.2399%" y="533" width="0.2079%" height="15" fill="rgb(213,46,41)" fg:x="1621" fg:w="54"/><text x="6.4899%" y="543.50"></text></g><g><title>__pm_relax (8 samples, 0.03%)</title><rect x="6.6210%" y="517" width="0.0308%" height="15" fill="rgb(215,133,35)" fg:x="1720" fg:w="8"/><text x="6.8710%" y="527.50"></text></g><g><title>ep_done_scan (147 samples, 0.57%)</title><rect x="6.4478%" y="533" width="0.5659%" height="15" fill="rgb(213,28,5)" fg:x="1675" fg:w="147"/><text x="6.6978%" y="543.50"></text></g><g><title>_raw_write_lock_irq (94 samples, 0.36%)</title><rect x="6.6518%" y="517" width="0.3618%" height="15" fill="rgb(215,77,49)" fg:x="1728" fg:w="94"/><text x="6.9018%" y="527.50"></text></g><g><title>ep_item_poll.isra.0 (728 samples, 2.80%)</title><rect x="7.0136%" y="533" width="2.8024%" height="15" fill="rgb(248,100,22)" fg:x="1822" fg:w="728"/><text x="7.2636%" y="543.50">ep..</text></g><g><title>sock_poll (697 samples, 2.68%)</title><rect x="7.1330%" y="517" width="2.6830%" height="15" fill="rgb(208,67,9)" fg:x="1853" fg:w="697"/><text x="7.3830%" y="527.50">so..</text></g><g><title>tcp_poll (314 samples, 1.21%)</title><rect x="8.6073%" y="501" width="1.2087%" height="15" fill="rgb(219,133,21)" fg:x="2236" fg:w="314"/><text x="8.8573%" y="511.50"></text></g><g><title>tcp_stream_memory_free (89 samples, 0.34%)</title><rect x="9.4734%" y="485" width="0.3426%" height="15" fill="rgb(246,46,29)" fg:x="2461" fg:w="89"/><text x="9.7234%" y="495.50"></text></g><g><title>mutex_lock (183 samples, 0.70%)</title><rect x="9.8160%" y="533" width="0.7044%" height="15" fill="rgb(246,185,52)" fg:x="2550" fg:w="183"/><text x="10.0660%" y="543.50"></text></g><g><title>mutex_unlock (68 samples, 0.26%)</title><rect x="10.5204%" y="533" width="0.2618%" height="15" fill="rgb(252,136,11)" fg:x="2733" fg:w="68"/><text x="10.7704%" y="543.50"></text></g><g><title>schedule_hrtimeout_range (13 samples, 0.05%)</title><rect x="10.7822%" y="533" width="0.0500%" height="15" fill="rgb(219,138,53)" fg:x="2801" fg:w="13"/><text x="11.0322%" y="543.50"></text></g><g><title>__rcu_read_lock (17 samples, 0.07%)</title><rect x="13.4498%" y="469" width="0.0654%" height="15" fill="rgb(211,51,23)" fg:x="3494" fg:w="17"/><text x="13.6998%" y="479.50"></text></g><g><title>__rcu_read_unlock (5 samples, 0.02%)</title><rect x="13.5153%" y="469" width="0.0192%" height="15" fill="rgb(247,221,28)" fg:x="3511" fg:w="5"/><text x="13.7653%" y="479.50"></text></g><g><title>_raw_spin_lock (63 samples, 0.24%)</title><rect x="13.5345%" y="469" width="0.2425%" height="15" fill="rgb(251,222,45)" fg:x="3516" fg:w="63"/><text x="13.7845%" y="479.50"></text></g><g><title>intel_pmu_disable_all (9 samples, 0.03%)</title><rect x="13.8425%" y="453" width="0.0346%" height="15" fill="rgb(217,162,53)" fg:x="3596" fg:w="9"/><text x="14.0925%" y="463.50"></text></g><g><title>native_write_msr (6 samples, 0.02%)</title><rect x="13.8540%" y="437" width="0.0231%" height="15" fill="rgb(229,93,14)" fg:x="3599" fg:w="6"/><text x="14.1040%" y="447.50"></text></g><g><title>__perf_event_task_sched_out (214 samples, 0.82%)</title><rect x="13.1842%" y="485" width="0.8238%" height="15" fill="rgb(209,67,49)" fg:x="3425" fg:w="214"/><text x="13.4342%" y="495.50"></text></g><g><title>perf_ctx_disable (60 samples, 0.23%)</title><rect x="13.7770%" y="469" width="0.2310%" height="15" fill="rgb(213,87,29)" fg:x="3579" fg:w="60"/><text x="14.0270%" y="479.50"></text></g><g><title>x86_pmu_disable (34 samples, 0.13%)</title><rect x="13.8771%" y="453" width="0.1309%" height="15" fill="rgb(205,151,52)" fg:x="3605" fg:w="34"/><text x="14.1271%" y="463.50"></text></g><g><title>dequeue_task (74 samples, 0.28%)</title><rect x="14.0080%" y="485" width="0.2849%" height="15" fill="rgb(253,215,39)" fg:x="3639" fg:w="74"/><text x="14.2580%" y="495.50"></text></g><g><title>__list_del_entry_valid (7 samples, 0.03%)</title><rect x="15.8711%" y="453" width="0.0269%" height="15" fill="rgb(221,220,41)" fg:x="4123" fg:w="7"/><text x="16.1211%" y="463.50"></text></g><g><title>clear_buddies (29 samples, 0.11%)</title><rect x="15.8981%" y="453" width="0.1116%" height="15" fill="rgb(218,133,21)" fg:x="4130" fg:w="29"/><text x="16.1481%" y="463.50"></text></g><g><title>reweight_entity (206 samples, 0.79%)</title><rect x="16.0097%" y="453" width="0.7930%" height="15" fill="rgb(221,193,43)" fg:x="4159" fg:w="206"/><text x="16.2597%" y="463.50"></text></g><g><title>update_cfs_group (288 samples, 1.11%)</title><rect x="16.8027%" y="453" width="1.1086%" height="15" fill="rgb(240,128,52)" fg:x="4365" fg:w="288"/><text x="17.0527%" y="463.50"></text></g><g><title>__calc_delta (416 samples, 1.60%)</title><rect x="18.7466%" y="437" width="1.6014%" height="15" fill="rgb(253,114,12)" fg:x="4870" fg:w="416"/><text x="18.9966%" y="447.50"></text></g><g><title>__cgroup_account_cputime (36 samples, 0.14%)</title><rect x="20.3480%" y="437" width="0.1386%" height="15" fill="rgb(215,223,47)" fg:x="5286" fg:w="36"/><text x="20.5980%" y="447.50"></text></g><g><title>cgroup_rstat_updated (12 samples, 0.05%)</title><rect x="20.4404%" y="421" width="0.0462%" height="15" fill="rgb(248,225,23)" fg:x="5310" fg:w="12"/><text x="20.6904%" y="431.50"></text></g><g><title>cpuacct_charge (144 samples, 0.55%)</title><rect x="20.4866%" y="437" width="0.5543%" height="15" fill="rgb(250,108,0)" fg:x="5322" fg:w="144"/><text x="20.7366%" y="447.50"></text></g><g><title>update_curr (858 samples, 3.30%)</title><rect x="17.9113%" y="453" width="3.3028%" height="15" fill="rgb(228,208,7)" fg:x="4653" fg:w="858"/><text x="18.1613%" y="463.50">upd..</text></g><g><title>update_min_vruntime (45 samples, 0.17%)</title><rect x="21.0409%" y="437" width="0.1732%" height="15" fill="rgb(244,45,10)" fg:x="5466" fg:w="45"/><text x="21.2909%" y="447.50"></text></g><g><title>__update_load_avg_cfs_rq (174 samples, 0.67%)</title><rect x="21.6452%" y="437" width="0.6698%" height="15" fill="rgb(207,125,25)" fg:x="5623" fg:w="174"/><text x="21.8952%" y="447.50"></text></g><g><title>update_load_avg (417 samples, 1.61%)</title><rect x="21.2141%" y="453" width="1.6052%" height="15" fill="rgb(210,195,18)" fg:x="5511" fg:w="417"/><text x="21.4641%" y="463.50"></text></g><g><title>__update_load_avg_se (131 samples, 0.50%)</title><rect x="22.3150%" y="437" width="0.5043%" height="15" fill="rgb(249,80,12)" fg:x="5797" fg:w="131"/><text x="22.5650%" y="447.50"></text></g><g><title>dequeue_entity (2,024 samples, 7.79%)</title><rect x="15.1320%" y="469" width="7.7912%" height="15" fill="rgb(221,65,9)" fg:x="3931" fg:w="2024"/><text x="15.3820%" y="479.50">dequeue_ent..</text></g><g><title>update_min_vruntime (27 samples, 0.10%)</title><rect x="22.8193%" y="453" width="0.1039%" height="15" fill="rgb(235,49,36)" fg:x="5928" fg:w="27"/><text x="23.0693%" y="463.50"></text></g><g><title>dequeue_task_fair (2,243 samples, 8.63%)</title><rect x="14.2929%" y="485" width="8.6342%" height="15" fill="rgb(225,32,20)" fg:x="3713" fg:w="2243"/><text x="14.5429%" y="495.50">dequeue_task..</text></g><g><title>__rcu_read_unlock (18 samples, 0.07%)</title><rect x="23.2042%" y="453" width="0.0693%" height="15" fill="rgb(215,141,46)" fg:x="6028" fg:w="18"/><text x="23.4542%" y="463.50"></text></g><g><title>_raw_spin_unlock (17 samples, 0.07%)</title><rect x="23.2735%" y="453" width="0.0654%" height="15" fill="rgb(250,160,47)" fg:x="6046" fg:w="17"/><text x="23.5235%" y="463.50"></text></g><g><title>__perf_event_task_sched_in (259 samples, 1.00%)</title><rect x="23.1735%" y="469" width="0.9970%" height="15" fill="rgb(216,222,40)" fg:x="6020" fg:w="259"/><text x="23.4235%" y="479.50"></text></g><g><title>perf_ctx_enable (216 samples, 0.83%)</title><rect x="23.3390%" y="453" width="0.8315%" height="15" fill="rgb(234,217,39)" fg:x="6063" fg:w="216"/><text x="23.5890%" y="463.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (204 samples, 0.79%)</title><rect x="23.3852%" y="437" width="0.7853%" height="15" fill="rgb(207,178,40)" fg:x="6075" fg:w="204"/><text x="23.6352%" y="447.50"></text></g><g><title>native_write_msr (187 samples, 0.72%)</title><rect x="23.4506%" y="421" width="0.7198%" height="15" fill="rgb(221,136,13)" fg:x="6092" fg:w="187"/><text x="23.7006%" y="431.50"></text></g><g><title>_raw_spin_unlock (4 samples, 0.02%)</title><rect x="24.1705%" y="469" width="0.0154%" height="15" fill="rgb(249,199,10)" fg:x="6279" fg:w="4"/><text x="24.4205%" y="479.50"></text></g><g><title>finish_task_switch.isra.0 (329 samples, 1.27%)</title><rect x="22.9271%" y="485" width="1.2665%" height="15" fill="rgb(249,222,13)" fg:x="5956" fg:w="329"/><text x="23.1771%" y="495.50"></text></g><g><title>__msecs_to_jiffies (7 samples, 0.03%)</title><rect x="24.9018%" y="453" width="0.0269%" height="15" fill="rgb(244,185,38)" fg:x="6469" fg:w="7"/><text x="25.1518%" y="463.50"></text></g><g><title>__rcu_read_lock (6 samples, 0.02%)</title><rect x="24.9288%" y="453" width="0.0231%" height="15" fill="rgb(236,202,9)" fg:x="6476" fg:w="6"/><text x="25.1788%" y="463.50"></text></g><g><title>__rcu_read_unlock (8 samples, 0.03%)</title><rect x="24.9519%" y="453" width="0.0308%" height="15" fill="rgb(250,229,37)" fg:x="6482" fg:w="8"/><text x="25.2019%" y="463.50"></text></g><g><title>pick_next_task_fair (205 samples, 0.79%)</title><rect x="24.2012%" y="485" width="0.7891%" height="15" fill="rgb(206,174,23)" fg:x="6287" fg:w="205"/><text x="24.4512%" y="495.50"></text></g><g><title>newidle_balance (128 samples, 0.49%)</title><rect x="24.4977%" y="469" width="0.4927%" height="15" fill="rgb(211,33,43)" fg:x="6364" fg:w="128"/><text x="24.7477%" y="479.50"></text></g><g><title>__rcu_read_unlock (4 samples, 0.02%)</title><rect x="25.2521%" y="469" width="0.0154%" height="15" fill="rgb(245,58,50)" fg:x="6560" fg:w="4"/><text x="25.5021%" y="479.50"></text></g><g><title>pick_next_task_idle (132 samples, 0.51%)</title><rect x="24.9904%" y="485" width="0.5081%" height="15" fill="rgb(244,68,36)" fg:x="6492" fg:w="132"/><text x="25.2404%" y="495.50"></text></g><g><title>__update_idle_core (60 samples, 0.23%)</title><rect x="25.2675%" y="469" width="0.2310%" height="15" fill="rgb(232,229,15)" fg:x="6564" fg:w="60"/><text x="25.5175%" y="479.50"></text></g><g><title>__rcu_read_lock (22 samples, 0.08%)</title><rect x="25.4138%" y="453" width="0.0847%" height="15" fill="rgb(254,30,23)" fg:x="6602" fg:w="22"/><text x="25.6638%" y="463.50"></text></g><g><title>psi_flags_change (52 samples, 0.20%)</title><rect x="26.0143%" y="469" width="0.2002%" height="15" fill="rgb(235,160,14)" fg:x="6758" fg:w="52"/><text x="26.2643%" y="479.50"></text></g><g><title>psi_group_change (658 samples, 2.53%)</title><rect x="26.2145%" y="469" width="2.5329%" height="15" fill="rgb(212,155,44)" fg:x="6810" fg:w="658"/><text x="26.4645%" y="479.50">ps..</text></g><g><title>record_times (67 samples, 0.26%)</title><rect x="28.4895%" y="453" width="0.2579%" height="15" fill="rgb(226,2,50)" fg:x="7401" fg:w="67"/><text x="28.7395%" y="463.50"></text></g><g><title>native_sched_clock (39 samples, 0.15%)</title><rect x="28.7589%" y="453" width="0.1501%" height="15" fill="rgb(234,177,6)" fg:x="7471" fg:w="39"/><text x="29.0089%" y="463.50"></text></g><g><title>psi_task_switch (887 samples, 3.41%)</title><rect x="25.4985%" y="485" width="3.4144%" height="15" fill="rgb(217,24,9)" fg:x="6624" fg:w="887"/><text x="25.7485%" y="495.50">psi..</text></g><g><title>sched_clock_cpu (43 samples, 0.17%)</title><rect x="28.7474%" y="469" width="0.1655%" height="15" fill="rgb(220,13,46)" fg:x="7468" fg:w="43"/><text x="28.9974%" y="479.50"></text></g><g><title>put_prev_task_fair (128 samples, 0.49%)</title><rect x="28.9129%" y="485" width="0.4927%" height="15" fill="rgb(239,221,27)" fg:x="7511" fg:w="128"/><text x="29.1629%" y="495.50"></text></g><g><title>put_prev_entity (103 samples, 0.40%)</title><rect x="29.0092%" y="469" width="0.3965%" height="15" fill="rgb(222,198,25)" fg:x="7536" fg:w="103"/><text x="29.2592%" y="479.50"></text></g><g><title>check_cfs_rq_runtime (19 samples, 0.07%)</title><rect x="29.3325%" y="453" width="0.0731%" height="15" fill="rgb(211,99,13)" fg:x="7620" fg:w="19"/><text x="29.5825%" y="463.50"></text></g><g><title>raw_spin_rq_lock_nested (53 samples, 0.20%)</title><rect x="29.4057%" y="485" width="0.2040%" height="15" fill="rgb(232,111,31)" fg:x="7639" fg:w="53"/><text x="29.6557%" y="495.50"></text></g><g><title>_raw_spin_lock (46 samples, 0.18%)</title><rect x="29.4326%" y="469" width="0.1771%" height="15" fill="rgb(245,82,37)" fg:x="7646" fg:w="46"/><text x="29.6826%" y="479.50"></text></g><g><title>rcu_note_context_switch (25 samples, 0.10%)</title><rect x="29.6097%" y="485" width="0.0962%" height="15" fill="rgb(227,149,46)" fg:x="7692" fg:w="25"/><text x="29.8597%" y="495.50"></text></g><g><title>record_times (23 samples, 0.09%)</title><rect x="30.5682%" y="453" width="0.0885%" height="15" fill="rgb(218,36,50)" fg:x="7941" fg:w="23"/><text x="30.8182%" y="463.50"></text></g><g><title>native_sched_clock (51 samples, 0.20%)</title><rect x="30.6760%" y="437" width="0.1963%" height="15" fill="rgb(226,80,48)" fg:x="7969" fg:w="51"/><text x="30.9260%" y="447.50"></text></g><g><title>psi_account_irqtime (281 samples, 1.08%)</title><rect x="29.7983%" y="469" width="1.0817%" height="15" fill="rgb(238,224,15)" fg:x="7741" fg:w="281"/><text x="30.0483%" y="479.50"></text></g><g><title>sched_clock_cpu (58 samples, 0.22%)</title><rect x="30.6567%" y="453" width="0.2233%" height="15" fill="rgb(241,136,10)" fg:x="7964" fg:w="58"/><text x="30.9067%" y="463.50"></text></g><g><title>native_sched_clock (51 samples, 0.20%)</title><rect x="30.8954%" y="453" width="0.1963%" height="15" fill="rgb(208,32,45)" fg:x="8026" fg:w="51"/><text x="31.1454%" y="463.50"></text></g><g><title>sched_clock_cpu (56 samples, 0.22%)</title><rect x="30.8800%" y="469" width="0.2156%" height="15" fill="rgb(207,135,9)" fg:x="8022" fg:w="56"/><text x="31.1300%" y="479.50"></text></g><g><title>__x64_sys_epoll_wait (7,311 samples, 28.14%)</title><rect x="3.1219%" y="565" width="28.1430%" height="15" fill="rgb(206,86,44)" fg:x="811" fg:w="7311"/><text x="3.3719%" y="575.50">__x64_sys_epoll_wait</text></g><g><title>do_epoll_wait (7,280 samples, 28.02%)</title><rect x="3.2412%" y="549" width="28.0237%" height="15" fill="rgb(245,177,15)" fg:x="842" fg:w="7280"/><text x="3.4912%" y="559.50">do_epoll_wait</text></g><g><title>schedule_hrtimeout_range_clock (5,308 samples, 20.43%)</title><rect x="10.8322%" y="533" width="20.4327%" height="15" fill="rgb(206,64,50)" fg:x="2814" fg:w="5308"/><text x="11.0822%" y="543.50">schedule_hrtimeout_range_clock</text></g><g><title>schedule (5,231 samples, 20.14%)</title><rect x="11.1286%" y="517" width="20.1363%" height="15" fill="rgb(234,36,40)" fg:x="2891" fg:w="5231"/><text x="11.3786%" y="527.50">schedule</text></g><g><title>__schedule (5,087 samples, 19.58%)</title><rect x="11.6830%" y="501" width="19.5820%" height="15" fill="rgb(213,64,8)" fg:x="3035" fg:w="5087"/><text x="11.9330%" y="511.50">__schedule</text></g><g><title>update_rq_clock (405 samples, 1.56%)</title><rect x="29.7059%" y="485" width="1.5590%" height="15" fill="rgb(210,75,36)" fg:x="7717" fg:w="405"/><text x="29.9559%" y="495.50"></text></g><g><title>update_irq_load_avg (44 samples, 0.17%)</title><rect x="31.0955%" y="469" width="0.1694%" height="15" fill="rgb(229,88,21)" fg:x="8078" fg:w="44"/><text x="31.3455%" y="479.50"></text></g><g><title>import_single_range (7 samples, 0.03%)</title><rect x="31.9655%" y="533" width="0.0269%" height="15" fill="rgb(252,204,47)" fg:x="8304" fg:w="7"/><text x="32.2155%" y="543.50"></text></g><g><title>__local_bh_enable_ip (20 samples, 0.08%)</title><rect x="32.4274%" y="485" width="0.0770%" height="15" fill="rgb(208,77,27)" fg:x="8424" fg:w="20"/><text x="32.6774%" y="495.50"></text></g><g><title>_raw_spin_unlock_bh (5 samples, 0.02%)</title><rect x="32.5044%" y="485" width="0.0192%" height="15" fill="rgb(221,76,26)" fg:x="8444" fg:w="5"/><text x="32.7544%" y="495.50"></text></g><g><title>lock_sock_nested (176 samples, 0.68%)</title><rect x="32.5237%" y="485" width="0.6775%" height="15" fill="rgb(225,139,18)" fg:x="8449" fg:w="176"/><text x="32.7737%" y="495.50"></text></g><g><title>_raw_spin_lock_bh (161 samples, 0.62%)</title><rect x="32.5814%" y="469" width="0.6198%" height="15" fill="rgb(230,137,11)" fg:x="8464" fg:w="161"/><text x="32.8314%" y="479.50"></text></g><g><title>_raw_spin_lock_bh (29 samples, 0.11%)</title><rect x="33.2859%" y="469" width="0.1116%" height="15" fill="rgb(212,28,1)" fg:x="8647" fg:w="29"/><text x="33.5359%" y="479.50"></text></g><g><title>release_sock (57 samples, 0.22%)</title><rect x="33.2012%" y="485" width="0.2194%" height="15" fill="rgb(248,164,17)" fg:x="8625" fg:w="57"/><text x="33.4512%" y="495.50"></text></g><g><title>tcp_release_cb (6 samples, 0.02%)</title><rect x="33.3975%" y="469" width="0.0231%" height="15" fill="rgb(222,171,42)" fg:x="8676" fg:w="6"/><text x="33.6475%" y="479.50"></text></g><g><title>tcp_recv_timestamp (25 samples, 0.10%)</title><rect x="33.4206%" y="485" width="0.0962%" height="15" fill="rgb(243,84,45)" fg:x="8682" fg:w="25"/><text x="33.6706%" y="495.50"></text></g><g><title>mem_cgroup_uncharge_skmem (118 samples, 0.45%)</title><rect x="35.1875%" y="453" width="0.4542%" height="15" fill="rgb(252,49,23)" fg:x="9141" fg:w="118"/><text x="35.4375%" y="463.50"></text></g><g><title>mod_memcg_state (112 samples, 0.43%)</title><rect x="35.2106%" y="437" width="0.4311%" height="15" fill="rgb(215,19,7)" fg:x="9147" fg:w="112"/><text x="35.4606%" y="447.50"></text></g><g><title>__mod_memcg_state (86 samples, 0.33%)</title><rect x="35.3106%" y="421" width="0.3310%" height="15" fill="rgb(238,81,41)" fg:x="9173" fg:w="86"/><text x="35.5606%" y="431.50"></text></g><g><title>cgroup_rstat_updated (18 samples, 0.07%)</title><rect x="35.5724%" y="405" width="0.0693%" height="15" fill="rgb(210,199,37)" fg:x="9241" fg:w="18"/><text x="35.8224%" y="415.50"></text></g><g><title>__sk_mem_reduce_allocated (338 samples, 1.30%)</title><rect x="34.6255%" y="469" width="1.3011%" height="15" fill="rgb(244,192,49)" fg:x="8995" fg:w="338"/><text x="34.8755%" y="479.50"></text></g><g><title>refill_stock (74 samples, 0.28%)</title><rect x="35.6417%" y="453" width="0.2849%" height="15" fill="rgb(226,211,11)" fg:x="9259" fg:w="74"/><text x="35.8917%" y="463.50"></text></g><g><title>__refill_stock (44 samples, 0.17%)</title><rect x="35.7572%" y="437" width="0.1694%" height="15" fill="rgb(236,162,54)" fg:x="9289" fg:w="44"/><text x="36.0072%" y="447.50"></text></g><g><title>__tcp_cleanup_rbuf (69 samples, 0.27%)</title><rect x="35.9266%" y="469" width="0.2656%" height="15" fill="rgb(220,229,9)" fg:x="9333" fg:w="69"/><text x="36.1766%" y="479.50"></text></g><g><title>__tcp_select_window (31 samples, 0.12%)</title><rect x="36.0728%" y="453" width="0.1193%" height="15" fill="rgb(250,87,22)" fg:x="9371" fg:w="31"/><text x="36.3228%" y="463.50"></text></g><g><title>__local_bh_enable_ip (7 samples, 0.03%)</title><rect x="36.4886%" y="453" width="0.0269%" height="15" fill="rgb(239,43,17)" fg:x="9479" fg:w="7"/><text x="36.7386%" y="463.50"></text></g><g><title>_raw_spin_lock_bh (149 samples, 0.57%)</title><rect x="36.5155%" y="453" width="0.5736%" height="15" fill="rgb(231,177,25)" fg:x="9486" fg:w="149"/><text x="36.7655%" y="463.50"></text></g><g><title>skb_attempt_defer_free (237 samples, 0.91%)</title><rect x="36.1922%" y="469" width="0.9123%" height="15" fill="rgb(219,179,1)" fg:x="9402" fg:w="237"/><text x="36.4422%" y="479.50"></text></g><g><title>_raw_spin_unlock_bh (4 samples, 0.02%)</title><rect x="37.0891%" y="453" width="0.0154%" height="15" fill="rgb(238,219,53)" fg:x="9635" fg:w="4"/><text x="37.3391%" y="463.50"></text></g><g><title>_copy_to_iter (256 samples, 0.99%)</title><rect x="37.9821%" y="437" width="0.9854%" height="15" fill="rgb(232,167,36)" fg:x="9867" fg:w="256"/><text x="38.2321%" y="447.50"></text></g><g><title>copyout (235 samples, 0.90%)</title><rect x="38.0630%" y="421" width="0.9046%" height="15" fill="rgb(244,19,51)" fg:x="9888" fg:w="235"/><text x="38.3130%" y="431.50"></text></g><g><title>rep_movs_alternative (193 samples, 0.74%)</title><rect x="38.2247%" y="405" width="0.7429%" height="15" fill="rgb(224,6,22)" fg:x="9930" fg:w="193"/><text x="38.4747%" y="415.50"></text></g><g><title>__virt_addr_valid (84 samples, 0.32%)</title><rect x="39.6951%" y="405" width="0.3234%" height="15" fill="rgb(224,145,5)" fg:x="10312" fg:w="84"/><text x="39.9451%" y="415.50"></text></g><g><title>check_stack_object (9 samples, 0.03%)</title><rect x="40.0185%" y="405" width="0.0346%" height="15" fill="rgb(234,130,49)" fg:x="10396" fg:w="9"/><text x="40.2685%" y="415.50"></text></g><g><title>skb_copy_datagram_iter (773 samples, 2.98%)</title><rect x="37.1045%" y="469" width="2.9756%" height="15" fill="rgb(254,6,2)" fg:x="9639" fg:w="773"/><text x="37.3545%" y="479.50">skb..</text></g><g><title>__skb_datagram_iter (760 samples, 2.93%)</title><rect x="37.1545%" y="453" width="2.9256%" height="15" fill="rgb(208,96,46)" fg:x="9652" fg:w="760"/><text x="37.4045%" y="463.50">__..</text></g><g><title>simple_copy_to_iter (288 samples, 1.11%)</title><rect x="38.9714%" y="437" width="1.1086%" height="15" fill="rgb(239,3,39)" fg:x="10124" fg:w="288"/><text x="39.2214%" y="447.50"></text></g><g><title>__check_object_size (281 samples, 1.08%)</title><rect x="38.9984%" y="421" width="1.0817%" height="15" fill="rgb(233,210,1)" fg:x="10131" fg:w="281"/><text x="39.2484%" y="431.50"></text></g><g><title>is_vmalloc_addr (7 samples, 0.03%)</title><rect x="40.0531%" y="405" width="0.0269%" height="15" fill="rgb(244,137,37)" fg:x="10405" fg:w="7"/><text x="40.3031%" y="415.50"></text></g><g><title>sock_rfree (122 samples, 0.47%)</title><rect x="40.0801%" y="469" width="0.4696%" height="15" fill="rgb(240,136,2)" fg:x="10412" fg:w="122"/><text x="40.3301%" y="479.50"></text></g><g><title>tcp_rcv_space_adjust (158 samples, 0.61%)</title><rect x="40.5574%" y="469" width="0.6082%" height="15" fill="rgb(239,18,37)" fg:x="10536" fg:w="158"/><text x="40.8074%" y="479.50"></text></g><g><title>tcp_mstamp_refresh (94 samples, 0.36%)</title><rect x="40.8038%" y="453" width="0.3618%" height="15" fill="rgb(218,185,22)" fg:x="10600" fg:w="94"/><text x="41.0538%" y="463.50"></text></g><g><title>ktime_get (81 samples, 0.31%)</title><rect x="40.8538%" y="437" width="0.3118%" height="15" fill="rgb(225,218,4)" fg:x="10613" fg:w="81"/><text x="41.1038%" y="447.50"></text></g><g><title>read_tsc (57 samples, 0.22%)</title><rect x="40.9462%" y="421" width="0.2194%" height="15" fill="rgb(230,182,32)" fg:x="10637" fg:w="57"/><text x="41.1962%" y="431.50"></text></g><g><title>inet_recvmsg (2,393 samples, 9.21%)</title><rect x="32.0617%" y="517" width="9.2116%" height="15" fill="rgb(242,56,43)" fg:x="8329" fg:w="2393"/><text x="32.3117%" y="527.50">inet_recvmsg</text></g><g><title>tcp_recvmsg (2,374 samples, 9.14%)</title><rect x="32.1349%" y="501" width="9.1385%" height="15" fill="rgb(233,99,24)" fg:x="8348" fg:w="2374"/><text x="32.3849%" y="511.50">tcp_recvmsg</text></g><g><title>tcp_recvmsg_locked (2,015 samples, 7.76%)</title><rect x="33.5168%" y="485" width="7.7566%" height="15" fill="rgb(234,209,42)" fg:x="8707" fg:w="2015"/><text x="33.7668%" y="495.50">tcp_recvmsg..</text></g><g><title>tcp_update_recv_tstamps (28 samples, 0.11%)</title><rect x="41.1656%" y="469" width="0.1078%" height="15" fill="rgb(227,7,12)" fg:x="10694" fg:w="28"/><text x="41.4156%" y="479.50"></text></g><g><title>ns_to_timespec64 (15 samples, 0.06%)</title><rect x="41.2156%" y="453" width="0.0577%" height="15" fill="rgb(245,203,43)" fg:x="10707" fg:w="15"/><text x="41.4656%" y="463.50"></text></g><g><title>sock_recvmsg (2,600 samples, 10.01%)</title><rect x="31.9925%" y="533" width="10.0085%" height="15" fill="rgb(238,205,33)" fg:x="8311" fg:w="2600"/><text x="32.2425%" y="543.50">sock_recvmsg</text></g><g><title>security_socket_recvmsg (189 samples, 0.73%)</title><rect x="41.2734%" y="517" width="0.7275%" height="15" fill="rgb(231,56,7)" fg:x="10722" fg:w="189"/><text x="41.5234%" y="527.50"></text></g><g><title>bpf_lsm_socket_recvmsg (72 samples, 0.28%)</title><rect x="41.7238%" y="501" width="0.2772%" height="15" fill="rgb(244,186,29)" fg:x="10839" fg:w="72"/><text x="41.9738%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (2,877 samples, 11.07%)</title><rect x="31.2649%" y="565" width="11.0748%" height="15" fill="rgb(234,111,31)" fg:x="8122" fg:w="2877"/><text x="31.5149%" y="575.50">__x64_sys_recvfr..</text></g><g><title>__sys_recvfrom (2,869 samples, 11.04%)</title><rect x="31.2957%" y="549" width="11.0440%" height="15" fill="rgb(241,149,10)" fg:x="8130" fg:w="2869"/><text x="31.5457%" y="559.50">__sys_recvfrom</text></g><g><title>sockfd_lookup_light (88 samples, 0.34%)</title><rect x="42.0009%" y="533" width="0.3387%" height="15" fill="rgb(249,206,44)" fg:x="10911" fg:w="88"/><text x="42.2509%" y="543.50"></text></g><g><title>__fget_light (80 samples, 0.31%)</title><rect x="42.0317%" y="517" width="0.3080%" height="15" fill="rgb(251,153,30)" fg:x="10919" fg:w="80"/><text x="42.2817%" y="527.50"></text></g><g><title>import_single_range (19 samples, 0.07%)</title><rect x="42.8863%" y="533" width="0.0731%" height="15" fill="rgb(239,152,38)" fg:x="11141" fg:w="19"/><text x="43.1363%" y="543.50"></text></g><g><title>inet_sendmsg (37 samples, 0.14%)</title><rect x="43.0826%" y="517" width="0.1424%" height="15" fill="rgb(249,139,47)" fg:x="11192" fg:w="37"/><text x="43.3326%" y="527.50"></text></g><g><title>inet_send_prepare (9 samples, 0.03%)</title><rect x="43.1904%" y="501" width="0.0346%" height="15" fill="rgb(244,64,35)" fg:x="11220" fg:w="9"/><text x="43.4404%" y="511.50"></text></g><g><title>security_socket_sendmsg (35 samples, 0.13%)</title><rect x="43.2250%" y="517" width="0.1347%" height="15" fill="rgb(216,46,15)" fg:x="11229" fg:w="35"/><text x="43.4750%" y="527.50"></text></g><g><title>bpf_lsm_socket_sendmsg (10 samples, 0.04%)</title><rect x="43.3213%" y="501" width="0.0385%" height="15" fill="rgb(250,74,19)" fg:x="11254" fg:w="10"/><text x="43.5713%" y="511.50"></text></g><g><title>__local_bh_enable_ip (18 samples, 0.07%)</title><rect x="43.4098%" y="501" width="0.0693%" height="15" fill="rgb(249,42,33)" fg:x="11277" fg:w="18"/><text x="43.6598%" y="511.50"></text></g><g><title>_raw_spin_unlock_bh (5 samples, 0.02%)</title><rect x="43.4791%" y="501" width="0.0192%" height="15" fill="rgb(242,149,17)" fg:x="11295" fg:w="5"/><text x="43.7291%" y="511.50"></text></g><g><title>lock_sock_nested (48 samples, 0.18%)</title><rect x="43.4983%" y="501" width="0.1848%" height="15" fill="rgb(244,29,21)" fg:x="11300" fg:w="48"/><text x="43.7483%" y="511.50"></text></g><g><title>_raw_spin_lock_bh (41 samples, 0.16%)</title><rect x="43.5253%" y="485" width="0.1578%" height="15" fill="rgb(220,130,37)" fg:x="11307" fg:w="41"/><text x="43.7753%" y="495.50"></text></g><g><title>_raw_spin_lock_bh (45 samples, 0.17%)</title><rect x="43.7332%" y="485" width="0.1732%" height="15" fill="rgb(211,67,2)" fg:x="11361" fg:w="45"/><text x="43.9832%" y="495.50"></text></g><g><title>release_sock (62 samples, 0.24%)</title><rect x="43.6831%" y="501" width="0.2387%" height="15" fill="rgb(235,68,52)" fg:x="11348" fg:w="62"/><text x="43.9331%" y="511.50"></text></g><g><title>tcp_release_cb (4 samples, 0.02%)</title><rect x="43.9064%" y="485" width="0.0154%" height="15" fill="rgb(246,142,3)" fg:x="11406" fg:w="4"/><text x="44.1564%" y="495.50"></text></g><g><title>__virt_addr_valid (53 samples, 0.20%)</title><rect x="45.7733%" y="469" width="0.2040%" height="15" fill="rgb(241,25,7)" fg:x="11891" fg:w="53"/><text x="46.0233%" y="479.50"></text></g><g><title>check_stack_object (7 samples, 0.03%)</title><rect x="45.9774%" y="469" width="0.0269%" height="15" fill="rgb(242,119,39)" fg:x="11944" fg:w="7"/><text x="46.2274%" y="479.50"></text></g><g><title>__check_object_size (147 samples, 0.57%)</title><rect x="45.4423%" y="485" width="0.5659%" height="15" fill="rgb(241,98,45)" fg:x="11805" fg:w="147"/><text x="45.6923%" y="495.50"></text></g><g><title>__ip_finish_output (44 samples, 0.17%)</title><rect x="48.5719%" y="421" width="0.1694%" height="15" fill="rgb(254,28,30)" fg:x="12618" fg:w="44"/><text x="48.8219%" y="431.50"></text></g><g><title>ip_skb_dst_mtu (26 samples, 0.10%)</title><rect x="48.6412%" y="405" width="0.1001%" height="15" fill="rgb(241,142,54)" fg:x="12636" fg:w="26"/><text x="48.8912%" y="415.50"></text></g><g><title>__rcu_read_lock (4 samples, 0.02%)</title><rect x="48.7412%" y="421" width="0.0154%" height="15" fill="rgb(222,85,15)" fg:x="12662" fg:w="4"/><text x="48.9912%" y="431.50"></text></g><g><title>__rcu_read_unlock (16 samples, 0.06%)</title><rect x="48.7566%" y="421" width="0.0616%" height="15" fill="rgb(210,85,47)" fg:x="12666" fg:w="16"/><text x="49.0066%" y="431.50"></text></g><g><title>__sk_dst_check (51 samples, 0.20%)</title><rect x="48.8182%" y="421" width="0.1963%" height="15" fill="rgb(224,206,25)" fg:x="12682" fg:w="51"/><text x="49.0682%" y="431.50"></text></g><g><title>ipv4_dst_check (28 samples, 0.11%)</title><rect x="48.9068%" y="405" width="0.1078%" height="15" fill="rgb(243,201,19)" fg:x="12705" fg:w="28"/><text x="49.1568%" y="415.50"></text></g><g><title>ip_finish_output (12 samples, 0.05%)</title><rect x="49.0146%" y="421" width="0.0462%" height="15" fill="rgb(236,59,4)" fg:x="12733" fg:w="12"/><text x="49.2646%" y="431.50"></text></g><g><title>native_sched_clock (133 samples, 0.51%)</title><rect x="51.9401%" y="309" width="0.5120%" height="15" fill="rgb(254,179,45)" fg:x="13493" fg:w="133"/><text x="52.1901%" y="319.50"></text></g><g><title>irqtime_account_irq (275 samples, 1.06%)</title><rect x="51.4666%" y="341" width="1.0586%" height="15" fill="rgb(226,14,10)" fg:x="13370" fg:w="275"/><text x="51.7166%" y="351.50"></text></g><g><title>sched_clock_cpu (164 samples, 0.63%)</title><rect x="51.8939%" y="325" width="0.6313%" height="15" fill="rgb(244,27,41)" fg:x="13481" fg:w="164"/><text x="52.1439%" y="335.50"></text></g><g><title>sched_clock (19 samples, 0.07%)</title><rect x="52.4521%" y="309" width="0.0731%" height="15" fill="rgb(235,35,32)" fg:x="13626" fg:w="19"/><text x="52.7021%" y="319.50"></text></g><g><title>__list_del_entry_valid (6 samples, 0.02%)</title><rect x="53.2720%" y="325" width="0.0231%" height="15" fill="rgb(218,68,31)" fg:x="13839" fg:w="6"/><text x="53.5220%" y="335.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (321 samples, 1.24%)</title><rect x="53.6608%" y="277" width="1.2357%" height="15" fill="rgb(207,120,37)" fg:x="13940" fg:w="321"/><text x="53.9108%" y="287.50"></text></g><g><title>ip_local_deliver (12 samples, 0.05%)</title><rect x="54.8965%" y="277" width="0.0462%" height="15" fill="rgb(227,98,0)" fg:x="14261" fg:w="12"/><text x="55.1465%" y="287.50"></text></g><g><title>__rcu_read_lock (4 samples, 0.02%)</title><rect x="55.0119%" y="261" width="0.0154%" height="15" fill="rgb(207,7,3)" fg:x="14291" fg:w="4"/><text x="55.2619%" y="271.50"></text></g><g><title>__rcu_read_unlock (5 samples, 0.02%)</title><rect x="55.0273%" y="261" width="0.0192%" height="15" fill="rgb(206,98,19)" fg:x="14295" fg:w="5"/><text x="55.2773%" y="271.50"></text></g><g><title>__rcu_read_lock (9 samples, 0.03%)</title><rect x="55.3853%" y="229" width="0.0346%" height="15" fill="rgb(217,5,26)" fg:x="14388" fg:w="9"/><text x="55.6353%" y="239.50"></text></g><g><title>raw_local_deliver (51 samples, 0.20%)</title><rect x="55.2275%" y="245" width="0.1963%" height="15" fill="rgb(235,190,38)" fg:x="14347" fg:w="51"/><text x="55.4775%" y="255.50"></text></g><g><title>__inet_lookup_established (353 samples, 1.36%)</title><rect x="56.7634%" y="229" width="1.3588%" height="15" fill="rgb(247,86,24)" fg:x="14746" fg:w="353"/><text x="57.0134%" y="239.50"></text></g><g><title>inet_ehashfn (45 samples, 0.17%)</title><rect x="57.9490%" y="213" width="0.1732%" height="15" fill="rgb(205,101,16)" fg:x="15054" fg:w="45"/><text x="58.1990%" y="223.50"></text></g><g><title>__xfrm_policy_check2.constprop.0 (49 samples, 0.19%)</title><rect x="58.1223%" y="229" width="0.1886%" height="15" fill="rgb(246,168,33)" fg:x="15099" fg:w="49"/><text x="58.3723%" y="239.50"></text></g><g><title>_raw_spin_lock (29 samples, 0.11%)</title><rect x="58.3109%" y="229" width="0.1116%" height="15" fill="rgb(231,114,1)" fg:x="15148" fg:w="29"/><text x="58.5609%" y="239.50"></text></g><g><title>_raw_spin_unlock (8 samples, 0.03%)</title><rect x="58.4225%" y="229" width="0.0308%" height="15" fill="rgb(207,184,53)" fg:x="15177" fg:w="8"/><text x="58.6725%" y="239.50"></text></g><g><title>nf_conntrack_put (9 samples, 0.03%)</title><rect x="58.4572%" y="229" width="0.0346%" height="15" fill="rgb(224,95,51)" fg:x="15186" fg:w="9"/><text x="58.7072%" y="239.50"></text></g><g><title>__rcu_read_lock (9 samples, 0.03%)</title><rect x="58.9730%" y="213" width="0.0346%" height="15" fill="rgb(212,188,45)" fg:x="15320" fg:w="9"/><text x="59.2230%" y="223.50"></text></g><g><title>__rcu_read_unlock (11 samples, 0.04%)</title><rect x="59.0076%" y="213" width="0.0423%" height="15" fill="rgb(223,154,38)" fg:x="15329" fg:w="11"/><text x="59.2576%" y="223.50"></text></g><g><title>sk_filter_trim_cap (248 samples, 0.95%)</title><rect x="58.4918%" y="229" width="0.9547%" height="15" fill="rgb(251,22,52)" fg:x="15195" fg:w="248"/><text x="58.7418%" y="239.50"></text></g><g><title>security_sock_rcv_skb (103 samples, 0.40%)</title><rect x="59.0500%" y="213" width="0.3965%" height="15" fill="rgb(229,209,22)" fg:x="15340" fg:w="103"/><text x="59.3000%" y="223.50"></text></g><g><title>bpf_lsm_socket_sock_rcv_skb (49 samples, 0.19%)</title><rect x="59.2578%" y="197" width="0.1886%" height="15" fill="rgb(234,138,34)" fg:x="15394" fg:w="49"/><text x="59.5078%" y="207.50"></text></g><g><title>sock_put (42 samples, 0.16%)</title><rect x="59.4465%" y="229" width="0.1617%" height="15" fill="rgb(212,95,11)" fg:x="15443" fg:w="42"/><text x="59.6965%" y="239.50"></text></g><g><title>tcp_filter (35 samples, 0.13%)</title><rect x="59.6081%" y="229" width="0.1347%" height="15" fill="rgb(240,179,47)" fg:x="15485" fg:w="35"/><text x="59.8581%" y="239.50"></text></g><g><title>tcp_inbound_md5_hash (25 samples, 0.10%)</title><rect x="59.7429%" y="229" width="0.0962%" height="15" fill="rgb(240,163,11)" fg:x="15520" fg:w="25"/><text x="59.9929%" y="239.50"></text></g><g><title>tcp_parse_md5sig_option (9 samples, 0.03%)</title><rect x="59.8044%" y="213" width="0.0346%" height="15" fill="rgb(236,37,12)" fg:x="15536" fg:w="9"/><text x="60.0544%" y="223.50"></text></g><g><title>ipv4_dst_check (5 samples, 0.02%)</title><rect x="59.8776%" y="213" width="0.0192%" height="15" fill="rgb(232,164,16)" fg:x="15555" fg:w="5"/><text x="60.1276%" y="223.50"></text></g><g><title>__rcu_read_unlock (3 samples, 0.01%)</title><rect x="60.5628%" y="197" width="0.0115%" height="15" fill="rgb(244,205,15)" fg:x="15733" fg:w="3"/><text x="60.8128%" y="207.50"></text></g><g><title>__tcp_ack_snd_check (13 samples, 0.05%)</title><rect x="60.5743%" y="197" width="0.0500%" height="15" fill="rgb(223,117,47)" fg:x="15736" fg:w="13"/><text x="60.8243%" y="207.50"></text></g><g><title>dst_release (54 samples, 0.21%)</title><rect x="60.6244%" y="197" width="0.2079%" height="15" fill="rgb(244,107,35)" fg:x="15749" fg:w="54"/><text x="60.8744%" y="207.50"></text></g><g><title>__mod_timer (91 samples, 0.35%)</title><rect x="60.8553%" y="181" width="0.3503%" height="15" fill="rgb(205,140,8)" fg:x="15809" fg:w="91"/><text x="61.1053%" y="191.50"></text></g><g><title>sk_reset_timer (98 samples, 0.38%)</title><rect x="60.8322%" y="197" width="0.3772%" height="15" fill="rgb(228,84,46)" fg:x="15803" fg:w="98"/><text x="61.0822%" y="207.50"></text></g><g><title>__rcu_read_lock (11 samples, 0.04%)</title><rect x="61.3519%" y="181" width="0.0423%" height="15" fill="rgb(254,188,9)" fg:x="15938" fg:w="11"/><text x="61.6019%" y="191.50"></text></g><g><title>__rcu_read_lock (4 samples, 0.02%)</title><rect x="62.1179%" y="133" width="0.0154%" height="15" fill="rgb(206,112,54)" fg:x="16137" fg:w="4"/><text x="62.3679%" y="143.50"></text></g><g><title>__rcu_read_unlock (3 samples, 0.01%)</title><rect x="62.1333%" y="133" width="0.0115%" height="15" fill="rgb(216,84,49)" fg:x="16141" fg:w="3"/><text x="62.3833%" y="143.50"></text></g><g><title>__wake_up (5 samples, 0.02%)</title><rect x="62.1449%" y="133" width="0.0192%" height="15" fill="rgb(214,194,35)" fg:x="16144" fg:w="5"/><text x="62.3949%" y="143.50"></text></g><g><title>__list_del_entry_valid (8 samples, 0.03%)</title><rect x="62.8378%" y="85" width="0.0308%" height="15" fill="rgb(249,28,3)" fg:x="16324" fg:w="8"/><text x="63.0878%" y="95.50"></text></g><g><title>_raw_spin_lock_irqsave (117 samples, 0.45%)</title><rect x="63.5499%" y="69" width="0.4504%" height="15" fill="rgb(222,56,52)" fg:x="16509" fg:w="117"/><text x="63.7999%" y="79.50"></text></g><g><title>_raw_spin_unlock_irqrestore (5 samples, 0.02%)</title><rect x="64.0003%" y="69" width="0.0192%" height="15" fill="rgb(245,217,50)" fg:x="16626" fg:w="5"/><text x="64.2503%" y="79.50"></text></g><g><title>__rcu_read_lock (6 samples, 0.02%)</title><rect x="64.3160%" y="53" width="0.0231%" height="15" fill="rgb(213,201,24)" fg:x="16708" fg:w="6"/><text x="64.5660%" y="63.50"></text></g><g><title>__rcu_read_unlock (11 samples, 0.04%)</title><rect x="64.3391%" y="53" width="0.0423%" height="15" fill="rgb(248,116,28)" fg:x="16714" fg:w="11"/><text x="64.5891%" y="63.50"></text></g><g><title>select_task_rq_fair (274 samples, 1.05%)</title><rect x="64.0196%" y="69" width="1.0547%" height="15" fill="rgb(219,72,43)" fg:x="16631" fg:w="274"/><text x="64.2696%" y="79.50"></text></g><g><title>available_idle_cpu (180 samples, 0.69%)</title><rect x="64.3814%" y="53" width="0.6929%" height="15" fill="rgb(209,138,14)" fg:x="16725" fg:w="180"/><text x="64.6314%" y="63.50"></text></g><g><title>call_function_single_prep_ipi (95 samples, 0.37%)</title><rect x="65.3053%" y="37" width="0.3657%" height="15" fill="rgb(222,18,33)" fg:x="16965" fg:w="95"/><text x="65.5553%" y="47.50"></text></g><g><title>__smp_call_single_queue (282 samples, 1.09%)</title><rect x="65.2783%" y="53" width="1.0855%" height="15" fill="rgb(213,199,7)" fg:x="16958" fg:w="282"/><text x="65.5283%" y="63.50"></text></g><g><title>llist_add_batch (180 samples, 0.69%)</title><rect x="65.6710%" y="37" width="0.6929%" height="15" fill="rgb(250,110,10)" fg:x="17060" fg:w="180"/><text x="65.9210%" y="47.50"></text></g><g><title>__wake_up_common (1,105 samples, 4.25%)</title><rect x="62.2296%" y="117" width="4.2536%" height="15" fill="rgb(248,123,6)" fg:x="16166" fg:w="1105"/><text x="62.4796%" y="127.50">__wak..</text></g><g><title>ep_autoremove_wake_function (953 samples, 3.67%)</title><rect x="62.8147%" y="101" width="3.6685%" height="15" fill="rgb(206,91,31)" fg:x="16318" fg:w="953"/><text x="63.0647%" y="111.50">ep_a..</text></g><g><title>try_to_wake_up (937 samples, 3.61%)</title><rect x="62.8763%" y="85" width="3.6069%" height="15" fill="rgb(211,154,13)" fg:x="16334" fg:w="937"/><text x="63.1263%" y="95.50">try_..</text></g><g><title>ttwu_queue_wakelist (366 samples, 1.41%)</title><rect x="65.0743%" y="69" width="1.4089%" height="15" fill="rgb(225,148,7)" fg:x="16905" fg:w="366"/><text x="65.3243%" y="79.50"></text></g><g><title>sched_clock_cpu (31 samples, 0.12%)</title><rect x="66.3638%" y="53" width="0.1193%" height="15" fill="rgb(220,160,43)" fg:x="17240" fg:w="31"/><text x="66.6138%" y="63.50"></text></g><g><title>native_sched_clock (27 samples, 0.10%)</title><rect x="66.3792%" y="37" width="0.1039%" height="15" fill="rgb(213,52,39)" fg:x="17244" fg:w="27"/><text x="66.6292%" y="47.50"></text></g><g><title>_raw_spin_lock_irqsave (132 samples, 0.51%)</title><rect x="66.4832%" y="117" width="0.5081%" height="15" fill="rgb(243,137,7)" fg:x="17271" fg:w="132"/><text x="66.7332%" y="127.50"></text></g><g><title>__wake_up_common_lock (1,261 samples, 4.85%)</title><rect x="62.1641%" y="133" width="4.8541%" height="15" fill="rgb(230,79,13)" fg:x="16149" fg:w="1261"/><text x="62.4141%" y="143.50">__wake..</text></g><g><title>_raw_spin_unlock_irqrestore (7 samples, 0.03%)</title><rect x="66.9913%" y="117" width="0.0269%" height="15" fill="rgb(247,105,23)" fg:x="17403" fg:w="7"/><text x="67.2413%" y="127.50"></text></g><g><title>_raw_read_lock_irqsave (194 samples, 0.75%)</title><rect x="67.0182%" y="133" width="0.7468%" height="15" fill="rgb(223,179,41)" fg:x="17410" fg:w="194"/><text x="67.2682%" y="143.50"></text></g><g><title>_raw_read_unlock_irqrestore (32 samples, 0.12%)</title><rect x="67.7650%" y="133" width="0.1232%" height="15" fill="rgb(218,9,34)" fg:x="17604" fg:w="32"/><text x="68.0150%" y="143.50"></text></g><g><title>__wake_up_common (1,673 samples, 6.44%)</title><rect x="61.4866%" y="165" width="6.4401%" height="15" fill="rgb(222,106,8)" fg:x="15973" fg:w="1673"/><text x="61.7366%" y="175.50">__wake_u..</text></g><g><title>ep_poll_callback (1,648 samples, 6.34%)</title><rect x="61.5829%" y="149" width="6.3438%" height="15" fill="rgb(211,220,0)" fg:x="15998" fg:w="1648"/><text x="61.8329%" y="159.50">ep_poll_..</text></g><g><title>sock_from_file (10 samples, 0.04%)</title><rect x="67.8882%" y="133" width="0.0385%" height="15" fill="rgb(229,52,16)" fg:x="17636" fg:w="10"/><text x="68.1382%" y="143.50"></text></g><g><title>_raw_spin_lock_irqsave (160 samples, 0.62%)</title><rect x="67.9267%" y="165" width="0.6159%" height="15" fill="rgb(212,155,18)" fg:x="17646" fg:w="160"/><text x="68.1767%" y="175.50"></text></g><g><title>__wake_up_common_lock (1,869 samples, 7.19%)</title><rect x="61.3943%" y="181" width="7.1945%" height="15" fill="rgb(242,21,14)" fg:x="15949" fg:w="1869"/><text x="61.6443%" y="191.50">__wake_up_..</text></g><g><title>_raw_spin_unlock_irqrestore (12 samples, 0.05%)</title><rect x="68.5426%" y="165" width="0.0462%" height="15" fill="rgb(222,19,48)" fg:x="17806" fg:w="12"/><text x="68.7926%" y="175.50"></text></g><g><title>sock_def_readable (1,921 samples, 7.39%)</title><rect x="61.2095%" y="197" width="7.3947%" height="15" fill="rgb(232,45,27)" fg:x="15901" fg:w="1921"/><text x="61.4595%" y="207.50">sock_def_r..</text></g><g><title>__wake_up_sync_key (4 samples, 0.02%)</title><rect x="68.5888%" y="181" width="0.0154%" height="15" fill="rgb(249,103,42)" fg:x="17818" fg:w="4"/><text x="68.8388%" y="191.50"></text></g><g><title>skb_release_data (126 samples, 0.49%)</title><rect x="70.7137%" y="165" width="0.4850%" height="15" fill="rgb(246,81,33)" fg:x="18370" fg:w="126"/><text x="70.9637%" y="175.50"></text></g><g><title>__kfree_skb (181 samples, 0.70%)</title><rect x="70.6906%" y="181" width="0.6967%" height="15" fill="rgb(252,33,42)" fg:x="18364" fg:w="181"/><text x="70.9406%" y="191.50"></text></g><g><title>skb_release_head_state (49 samples, 0.19%)</title><rect x="71.1987%" y="165" width="0.1886%" height="15" fill="rgb(209,212,41)" fg:x="18496" fg:w="49"/><text x="71.4487%" y="175.50"></text></g><g><title>__list_del_entry_valid (12 samples, 0.05%)</title><rect x="71.3873%" y="181" width="0.0462%" height="15" fill="rgb(207,154,6)" fg:x="18545" fg:w="12"/><text x="71.6373%" y="191.50"></text></g><g><title>cubictcp_acked (24 samples, 0.09%)</title><rect x="71.4335%" y="181" width="0.0924%" height="15" fill="rgb(223,64,47)" fg:x="18557" fg:w="24"/><text x="71.6835%" y="191.50"></text></g><g><title>cubictcp_cong_avoid (9 samples, 0.03%)</title><rect x="71.5259%" y="181" width="0.0346%" height="15" fill="rgb(211,161,38)" fg:x="18581" fg:w="9"/><text x="71.7759%" y="191.50"></text></g><g><title>kfree_skbmem (43 samples, 0.17%)</title><rect x="71.5606%" y="181" width="0.1655%" height="15" fill="rgb(219,138,40)" fg:x="18590" fg:w="43"/><text x="71.8106%" y="191.50"></text></g><g><title>rb_erase (30 samples, 0.12%)</title><rect x="71.7261%" y="181" width="0.1155%" height="15" fill="rgb(241,228,46)" fg:x="18633" fg:w="30"/><text x="71.9761%" y="191.50"></text></g><g><title>rb_first (8 samples, 0.03%)</title><rect x="71.8416%" y="181" width="0.0308%" height="15" fill="rgb(223,209,38)" fg:x="18663" fg:w="8"/><text x="72.0916%" y="191.50"></text></g><g><title>rb_next (14 samples, 0.05%)</title><rect x="71.8724%" y="181" width="0.0539%" height="15" fill="rgb(236,164,45)" fg:x="18671" fg:w="14"/><text x="72.1224%" y="191.50"></text></g><g><title>tcp_ack_tstamp (12 samples, 0.05%)</title><rect x="71.9262%" y="181" width="0.0462%" height="15" fill="rgb(231,15,5)" fg:x="18685" fg:w="12"/><text x="72.1762%" y="191.50"></text></g><g><title>__usecs_to_jiffies (10 samples, 0.04%)</title><rect x="72.2727%" y="165" width="0.0385%" height="15" fill="rgb(252,35,15)" fg:x="18775" fg:w="10"/><text x="72.5227%" y="175.50"></text></g><g><title>tcp_ack_update_rtt (121 samples, 0.47%)</title><rect x="71.9724%" y="181" width="0.4658%" height="15" fill="rgb(248,181,18)" fg:x="18697" fg:w="121"/><text x="72.2224%" y="191.50"></text></g><g><title>minmax_running_min (31 samples, 0.12%)</title><rect x="72.3189%" y="165" width="0.1193%" height="15" fill="rgb(233,39,42)" fg:x="18787" fg:w="31"/><text x="72.5689%" y="175.50"></text></g><g><title>tcp_chrono_stop (14 samples, 0.05%)</title><rect x="72.4382%" y="181" width="0.0539%" height="15" fill="rgb(238,110,33)" fg:x="18818" fg:w="14"/><text x="72.6882%" y="191.50"></text></g><g><title>tcp_newly_delivered (56 samples, 0.22%)</title><rect x="72.4921%" y="181" width="0.2156%" height="15" fill="rgb(233,195,10)" fg:x="18832" fg:w="56"/><text x="72.7421%" y="191.50"></text></g><g><title>tcp_rack_update_reo_wnd (23 samples, 0.09%)</title><rect x="72.7077%" y="181" width="0.0885%" height="15" fill="rgb(254,105,3)" fg:x="18888" fg:w="23"/><text x="72.9577%" y="191.50"></text></g><g><title>tcp_rate_gen (25 samples, 0.10%)</title><rect x="72.7962%" y="181" width="0.0962%" height="15" fill="rgb(221,225,9)" fg:x="18911" fg:w="25"/><text x="73.0462%" y="191.50"></text></g><g><title>tcp_rate_skb_delivered (45 samples, 0.17%)</title><rect x="72.8924%" y="181" width="0.1732%" height="15" fill="rgb(224,227,45)" fg:x="18936" fg:w="45"/><text x="73.1424%" y="191.50"></text></g><g><title>tcp_rearm_rto (15 samples, 0.06%)</title><rect x="73.0657%" y="181" width="0.0577%" height="15" fill="rgb(229,198,43)" fg:x="18981" fg:w="15"/><text x="73.3157%" y="191.50"></text></g><g><title>tcp_schedule_loss_probe (26 samples, 0.10%)</title><rect x="73.1234%" y="181" width="0.1001%" height="15" fill="rgb(206,209,35)" fg:x="18996" fg:w="26"/><text x="73.3734%" y="191.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (43 samples, 0.17%)</title><rect x="73.2235%" y="181" width="0.1655%" height="15" fill="rgb(245,195,53)" fg:x="19022" fg:w="43"/><text x="73.4735%" y="191.50"></text></g><g><title>tcp_update_pacing_rate (127 samples, 0.49%)</title><rect x="73.3890%" y="181" width="0.4889%" height="15" fill="rgb(240,92,26)" fg:x="19065" fg:w="127"/><text x="73.6390%" y="191.50"></text></g><g><title>tcp_ack (1,371 samples, 5.28%)</title><rect x="68.6042%" y="197" width="5.2775%" height="15" fill="rgb(207,40,23)" fg:x="17822" fg:w="1371"/><text x="68.8542%" y="207.50">tcp_ack</text></g><g><title>tcp_check_space (112 samples, 0.43%)</title><rect x="73.8817%" y="197" width="0.4311%" height="15" fill="rgb(223,111,35)" fg:x="19193" fg:w="112"/><text x="74.1317%" y="207.50"></text></g><g><title>tcp_data_ready (9 samples, 0.03%)</title><rect x="74.3129%" y="197" width="0.0346%" height="15" fill="rgb(229,147,28)" fg:x="19305" fg:w="9"/><text x="74.5629%" y="207.50"></text></g><g><title>tcp_event_data_recv (39 samples, 0.15%)</title><rect x="74.3475%" y="197" width="0.1501%" height="15" fill="rgb(211,29,28)" fg:x="19314" fg:w="39"/><text x="74.5975%" y="207.50"></text></g><g><title>tcp_grow_window (23 samples, 0.09%)</title><rect x="74.4977%" y="197" width="0.0885%" height="15" fill="rgb(228,72,33)" fg:x="19353" fg:w="23"/><text x="74.7477%" y="207.50"></text></g><g><title>tcp_mstamp_refresh (102 samples, 0.39%)</title><rect x="74.5862%" y="197" width="0.3926%" height="15" fill="rgb(205,214,31)" fg:x="19376" fg:w="102"/><text x="74.8362%" y="207.50"></text></g><g><title>ktime_get (84 samples, 0.32%)</title><rect x="74.6555%" y="181" width="0.3234%" height="15" fill="rgb(224,111,15)" fg:x="19394" fg:w="84"/><text x="74.9055%" y="191.50"></text></g><g><title>read_tsc (53 samples, 0.20%)</title><rect x="74.7748%" y="165" width="0.2040%" height="15" fill="rgb(253,21,26)" fg:x="19425" fg:w="53"/><text x="75.0248%" y="175.50"></text></g><g><title>tcp_queue_rcv (53 samples, 0.20%)</title><rect x="74.9788%" y="197" width="0.2040%" height="15" fill="rgb(245,139,43)" fg:x="19478" fg:w="53"/><text x="75.2288%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (4,003 samples, 15.41%)</title><rect x="59.8391%" y="229" width="15.4092%" height="15" fill="rgb(252,170,7)" fg:x="15545" fg:w="4003"/><text x="60.0891%" y="239.50">tcp_v4_do_rcv</text></g><g><title>tcp_rcv_established (3,988 samples, 15.35%)</title><rect x="59.8968%" y="213" width="15.3515%" height="15" fill="rgb(231,118,14)" fg:x="15560" fg:w="3988"/><text x="60.1468%" y="223.50">tcp_rcv_established</text></g><g><title>tcp_send_delayed_ack (17 samples, 0.07%)</title><rect x="75.1828%" y="197" width="0.0654%" height="15" fill="rgb(238,83,0)" fg:x="19531" fg:w="17"/><text x="75.4328%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (5,283 samples, 20.34%)</title><rect x="55.0466%" y="261" width="20.3364%" height="15" fill="rgb(221,39,39)" fg:x="14300" fg:w="5283"/><text x="55.2966%" y="271.50">ip_protocol_deliver_rcu</text></g><g><title>tcp_v4_rcv (5,185 samples, 19.96%)</title><rect x="55.4238%" y="245" width="19.9592%" height="15" fill="rgb(222,119,46)" fg:x="14398" fg:w="5185"/><text x="55.6738%" y="255.50">tcp_v4_rcv</text></g><g><title>tcp_v4_fill_cb (35 samples, 0.13%)</title><rect x="75.2483%" y="229" width="0.1347%" height="15" fill="rgb(222,165,49)" fg:x="19548" fg:w="35"/><text x="75.4983%" y="239.50"></text></g><g><title>ip_local_deliver_finish (5,400 samples, 20.79%)</title><rect x="54.9426%" y="277" width="20.7868%" height="15" fill="rgb(219,113,52)" fg:x="14273" fg:w="5400"/><text x="55.1926%" y="287.50">ip_local_deliver_finish</text></g><g><title>ktime_get_with_offset (90 samples, 0.35%)</title><rect x="75.3830%" y="261" width="0.3464%" height="15" fill="rgb(214,7,15)" fg:x="19583" fg:w="90"/><text x="75.6330%" y="271.50"></text></g><g><title>read_tsc (48 samples, 0.18%)</title><rect x="75.5447%" y="245" width="0.1848%" height="15" fill="rgb(235,32,4)" fg:x="19625" fg:w="48"/><text x="75.7947%" y="255.50"></text></g><g><title>ip_rcv_core (152 samples, 0.59%)</title><rect x="75.9027%" y="261" width="0.5851%" height="15" fill="rgb(238,90,54)" fg:x="19718" fg:w="152"/><text x="76.1527%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (6,201 samples, 23.87%)</title><rect x="53.4953%" y="293" width="23.8702%" height="15" fill="rgb(213,208,19)" fg:x="13897" fg:w="6201"/><text x="53.7453%" y="303.50">__netif_receive_skb_one_core</text></g><g><title>ip_rcv (425 samples, 1.64%)</title><rect x="75.7295%" y="277" width="1.6360%" height="15" fill="rgb(233,156,4)" fg:x="19673" fg:w="425"/><text x="75.9795%" y="287.50"></text></g><g><title>ip_rcv_finish_core.isra.0 (228 samples, 0.88%)</title><rect x="76.4878%" y="261" width="0.8777%" height="15" fill="rgb(207,194,5)" fg:x="19870" fg:w="228"/><text x="76.7378%" y="271.50"></text></g><g><title>__rcu_read_lock (3 samples, 0.01%)</title><rect x="77.3655%" y="293" width="0.0115%" height="15" fill="rgb(206,111,30)" fg:x="20098" fg:w="3"/><text x="77.6155%" y="303.50"></text></g><g><title>__rcu_read_unlock (6 samples, 0.02%)</title><rect x="77.3770%" y="293" width="0.0231%" height="15" fill="rgb(243,70,54)" fg:x="20101" fg:w="6"/><text x="77.6270%" y="303.50"></text></g><g><title>_raw_spin_lock_irq (151 samples, 0.58%)</title><rect x="77.4001%" y="293" width="0.5813%" height="15" fill="rgb(242,28,8)" fg:x="20107" fg:w="151"/><text x="77.6501%" y="303.50"></text></g><g><title>__napi_poll (6,433 samples, 24.76%)</title><rect x="53.2951%" y="325" width="24.7633%" height="15" fill="rgb(219,106,18)" fg:x="13845" fg:w="6433"/><text x="53.5451%" y="335.50">__napi_poll</text></g><g><title>process_backlog (6,427 samples, 24.74%)</title><rect x="53.3182%" y="309" width="24.7402%" height="15" fill="rgb(244,222,10)" fg:x="13851" fg:w="6427"/><text x="53.5682%" y="319.50">process_backlog</text></g><g><title>_raw_spin_unlock_irq (20 samples, 0.08%)</title><rect x="77.9814%" y="293" width="0.0770%" height="15" fill="rgb(236,179,52)" fg:x="20258" fg:w="20"/><text x="78.2314%" y="303.50"></text></g><g><title>_raw_spin_lock (190 samples, 0.73%)</title><rect x="78.0661%" y="325" width="0.7314%" height="15" fill="rgb(213,23,39)" fg:x="20280" fg:w="190"/><text x="78.3161%" y="335.50"></text></g><g><title>_raw_spin_unlock (3 samples, 0.01%)</title><rect x="78.7974%" y="325" width="0.0115%" height="15" fill="rgb(238,48,10)" fg:x="20470" fg:w="3"/><text x="79.0474%" y="335.50"></text></g><g><title>kfree_skbmem (78 samples, 0.30%)</title><rect x="78.8128%" y="325" width="0.3003%" height="15" fill="rgb(251,196,23)" fg:x="20474" fg:w="78"/><text x="79.0628%" y="335.50"></text></g><g><title>kmem_cache_free (70 samples, 0.27%)</title><rect x="79.1131%" y="325" width="0.2695%" height="15" fill="rgb(250,152,24)" fg:x="20552" fg:w="70"/><text x="79.3631%" y="335.50"></text></g><g><title>cache_from_obj (25 samples, 0.10%)</title><rect x="79.2863%" y="309" width="0.0962%" height="15" fill="rgb(209,150,17)" fg:x="20597" fg:w="25"/><text x="79.5363%" y="319.50"></text></g><g><title>free_unref_page (10 samples, 0.04%)</title><rect x="80.2333%" y="293" width="0.0385%" height="15" fill="rgb(234,202,34)" fg:x="20843" fg:w="10"/><text x="80.4833%" y="303.50"></text></g><g><title>free_unref_page_prepare (10 samples, 0.04%)</title><rect x="80.2333%" y="277" width="0.0385%" height="15" fill="rgb(253,148,53)" fg:x="20843" fg:w="10"/><text x="80.4833%" y="287.50"></text></g><g><title>free_tail_page_prepare (5 samples, 0.02%)</title><rect x="80.2525%" y="261" width="0.0192%" height="15" fill="rgb(218,129,16)" fg:x="20848" fg:w="5"/><text x="80.5025%" y="271.50"></text></g><g><title>kmem_cache_free (82 samples, 0.32%)</title><rect x="80.2718%" y="293" width="0.3157%" height="15" fill="rgb(216,85,19)" fg:x="20853" fg:w="82"/><text x="80.5218%" y="303.50"></text></g><g><title>cache_from_obj (39 samples, 0.15%)</title><rect x="80.4373%" y="277" width="0.1501%" height="15" fill="rgb(235,228,7)" fg:x="20896" fg:w="39"/><text x="80.6873%" y="287.50"></text></g><g><title>skb_release_data (288 samples, 1.11%)</title><rect x="79.5096%" y="309" width="1.1086%" height="15" fill="rgb(245,175,0)" fg:x="20655" fg:w="288"/><text x="79.7596%" y="319.50"></text></g><g><title>skb_free_head (8 samples, 0.03%)</title><rect x="80.5874%" y="293" width="0.0308%" height="15" fill="rgb(208,168,36)" fg:x="20935" fg:w="8"/><text x="80.8374%" y="303.50"></text></g><g><title>do_softirq.part.0 (7,716 samples, 29.70%)</title><rect x="50.9547%" y="373" width="29.7021%" height="15" fill="rgb(246,171,24)" fg:x="13237" fg:w="7716"/><text x="51.2047%" y="383.50">do_softirq.part.0</text></g><g><title>__do_softirq (7,672 samples, 29.53%)</title><rect x="51.1240%" y="357" width="29.5327%" height="15" fill="rgb(215,142,24)" fg:x="13281" fg:w="7672"/><text x="51.3740%" y="367.50">__do_softirq</text></g><g><title>net_rx_action (7,308 samples, 28.13%)</title><rect x="52.5252%" y="341" width="28.1315%" height="15" fill="rgb(250,187,7)" fg:x="13645" fg:w="7308"/><text x="52.7752%" y="351.50">net_rx_action</text></g><g><title>napi_consume_skb (331 samples, 1.27%)</title><rect x="79.3826%" y="325" width="1.2742%" height="15" fill="rgb(228,66,33)" fg:x="20622" fg:w="331"/><text x="79.6326%" y="335.50"></text></g><g><title>skb_release_head_state (10 samples, 0.04%)</title><rect x="80.6182%" y="309" width="0.0385%" height="15" fill="rgb(234,215,21)" fg:x="20943" fg:w="10"/><text x="80.8682%" y="319.50"></text></g><g><title>__local_bh_enable_ip (7,735 samples, 29.78%)</title><rect x="50.8892%" y="389" width="29.7752%" height="15" fill="rgb(222,191,20)" fg:x="13220" fg:w="7735"/><text x="51.1392%" y="399.50">__local_bh_enable_ip</text></g><g><title>__list_add_valid (8 samples, 0.03%)</title><rect x="81.4112%" y="309" width="0.0308%" height="15" fill="rgb(245,79,54)" fg:x="21149" fg:w="8"/><text x="81.6612%" y="319.50"></text></g><g><title>__raise_softirq_irqoff (10 samples, 0.04%)</title><rect x="81.4420%" y="309" width="0.0385%" height="15" fill="rgb(240,10,37)" fg:x="21157" fg:w="10"/><text x="81.6920%" y="319.50"></text></g><g><title>_raw_spin_lock_irqsave (63 samples, 0.24%)</title><rect x="81.4805%" y="309" width="0.2425%" height="15" fill="rgb(214,192,32)" fg:x="21167" fg:w="63"/><text x="81.7305%" y="319.50"></text></g><g><title>__netif_rx (144 samples, 0.55%)</title><rect x="81.2033%" y="357" width="0.5543%" height="15" fill="rgb(209,36,54)" fg:x="21095" fg:w="144"/><text x="81.4533%" y="367.50"></text></g><g><title>netif_rx_internal (136 samples, 0.52%)</title><rect x="81.2341%" y="341" width="0.5235%" height="15" fill="rgb(220,10,11)" fg:x="21103" fg:w="136"/><text x="81.4841%" y="351.50"></text></g><g><title>enqueue_to_backlog (126 samples, 0.49%)</title><rect x="81.2726%" y="325" width="0.4850%" height="15" fill="rgb(221,106,17)" fg:x="21113" fg:w="126"/><text x="81.5226%" y="335.50"></text></g><g><title>_raw_spin_unlock_irqrestore (9 samples, 0.03%)</title><rect x="81.7230%" y="309" width="0.0346%" height="15" fill="rgb(251,142,44)" fg:x="21230" fg:w="9"/><text x="81.9730%" y="319.50"></text></g><g><title>eth_type_trans (83 samples, 0.32%)</title><rect x="81.7615%" y="357" width="0.3195%" height="15" fill="rgb(238,13,15)" fg:x="21240" fg:w="83"/><text x="82.0115%" y="367.50"></text></g><g><title>sk_free (24 samples, 0.09%)</title><rect x="82.0810%" y="357" width="0.0924%" height="15" fill="rgb(208,107,27)" fg:x="21323" fg:w="24"/><text x="82.3310%" y="367.50"></text></g><g><title>skb_clone_tx_timestamp (21 samples, 0.08%)</title><rect x="82.1734%" y="357" width="0.0808%" height="15" fill="rgb(205,136,37)" fg:x="21347" fg:w="21"/><text x="82.4234%" y="367.50"></text></g><g><title>dev_hard_start_xmit (483 samples, 1.86%)</title><rect x="80.6721%" y="389" width="1.8593%" height="15" fill="rgb(250,205,27)" fg:x="20957" fg:w="483"/><text x="80.9221%" y="399.50">d..</text></g><g><title>loopback_xmit (459 samples, 1.77%)</title><rect x="80.7645%" y="373" width="1.7669%" height="15" fill="rgb(210,80,43)" fg:x="20981" fg:w="459"/><text x="81.0145%" y="383.50"></text></g><g><title>tcp_wfree (72 samples, 0.28%)</title><rect x="82.2542%" y="357" width="0.2772%" height="15" fill="rgb(247,160,36)" fg:x="21368" fg:w="72"/><text x="82.5042%" y="367.50"></text></g><g><title>netdev_core_pick_tx (22 samples, 0.08%)</title><rect x="82.5314%" y="389" width="0.0847%" height="15" fill="rgb(234,13,49)" fg:x="21440" fg:w="22"/><text x="82.7814%" y="399.50"></text></g><g><title>netif_skb_features (46 samples, 0.18%)</title><rect x="82.9279%" y="373" width="0.1771%" height="15" fill="rgb(234,122,0)" fg:x="21543" fg:w="46"/><text x="83.1779%" y="383.50"></text></g><g><title>skb_network_protocol (27 samples, 0.10%)</title><rect x="83.0010%" y="357" width="0.1039%" height="15" fill="rgb(207,146,38)" fg:x="21562" fg:w="27"/><text x="83.2510%" y="367.50"></text></g><g><title>validate_xmit_skb (132 samples, 0.51%)</title><rect x="82.6161%" y="389" width="0.5081%" height="15" fill="rgb(207,177,25)" fg:x="21462" fg:w="132"/><text x="82.8661%" y="399.50"></text></g><g><title>skb_csum_hwoffload_help (5 samples, 0.02%)</title><rect x="83.1049%" y="373" width="0.0192%" height="15" fill="rgb(211,178,42)" fg:x="21589" fg:w="5"/><text x="83.3549%" y="383.50"></text></g><g><title>__dev_queue_xmit (8,732 samples, 33.61%)</title><rect x="49.5727%" y="405" width="33.6131%" height="15" fill="rgb(230,69,54)" fg:x="12878" fg:w="8732"/><text x="49.8227%" y="415.50">__dev_queue_xmit</text></g><g><title>validate_xmit_xfrm (16 samples, 0.06%)</title><rect x="83.1242%" y="389" width="0.0616%" height="15" fill="rgb(214,135,41)" fg:x="21594" fg:w="16"/><text x="83.3742%" y="399.50"></text></g><g><title>__rcu_read_lock (4 samples, 0.02%)</title><rect x="83.1858%" y="405" width="0.0154%" height="15" fill="rgb(237,67,25)" fg:x="21610" fg:w="4"/><text x="83.4358%" y="415.50"></text></g><g><title>ip_finish_output2 (8,876 samples, 34.17%)</title><rect x="49.0607%" y="421" width="34.1674%" height="15" fill="rgb(222,189,50)" fg:x="12745" fg:w="8876"/><text x="49.3107%" y="431.50">ip_finish_output2</text></g><g><title>__rcu_read_unlock (7 samples, 0.03%)</title><rect x="83.2012%" y="405" width="0.0269%" height="15" fill="rgb(245,148,34)" fg:x="21614" fg:w="7"/><text x="83.4512%" y="415.50"></text></g><g><title>ip_local_out (108 samples, 0.42%)</title><rect x="83.2281%" y="421" width="0.4157%" height="15" fill="rgb(222,29,6)" fg:x="21621" fg:w="108"/><text x="83.4781%" y="431.50"></text></g><g><title>__ip_local_out (101 samples, 0.39%)</title><rect x="83.2551%" y="405" width="0.3888%" height="15" fill="rgb(221,189,43)" fg:x="21628" fg:w="101"/><text x="83.5051%" y="415.50"></text></g><g><title>ip_send_check (75 samples, 0.29%)</title><rect x="83.3551%" y="389" width="0.2887%" height="15" fill="rgb(207,36,27)" fg:x="21654" fg:w="75"/><text x="83.6051%" y="399.50"></text></g><g><title>ip_output (25 samples, 0.10%)</title><rect x="83.6439%" y="421" width="0.0962%" height="15" fill="rgb(217,90,24)" fg:x="21729" fg:w="25"/><text x="83.8939%" y="431.50"></text></g><g><title>__ip_queue_xmit (9,259 samples, 35.64%)</title><rect x="48.1253%" y="437" width="35.6417%" height="15" fill="rgb(224,66,35)" fg:x="12502" fg:w="9259"/><text x="48.3753%" y="447.50">__ip_queue_xmit</text></g><g><title>skb_push (7 samples, 0.03%)</title><rect x="83.7401%" y="421" width="0.0269%" height="15" fill="rgb(221,13,50)" fg:x="21754" fg:w="7"/><text x="83.9901%" y="431.50"></text></g><g><title>__skb_clone (122 samples, 0.47%)</title><rect x="83.7670%" y="437" width="0.4696%" height="15" fill="rgb(236,68,49)" fg:x="21761" fg:w="122"/><text x="84.0170%" y="447.50"></text></g><g><title>__copy_skb_header (41 samples, 0.16%)</title><rect x="84.0788%" y="421" width="0.1578%" height="15" fill="rgb(229,146,28)" fg:x="21842" fg:w="41"/><text x="84.3288%" y="431.50"></text></g><g><title>__tcp_select_window (35 samples, 0.13%)</title><rect x="84.2367%" y="437" width="0.1347%" height="15" fill="rgb(225,31,38)" fg:x="21883" fg:w="35"/><text x="84.4867%" y="447.50"></text></g><g><title>bpf_skops_write_hdr_opt.isra.0 (47 samples, 0.18%)</title><rect x="84.3714%" y="437" width="0.1809%" height="15" fill="rgb(250,208,3)" fg:x="21918" fg:w="47"/><text x="84.6214%" y="447.50"></text></g><g><title>cubictcp_cwnd_event (5 samples, 0.02%)</title><rect x="84.5523%" y="437" width="0.0192%" height="15" fill="rgb(246,54,23)" fg:x="21965" fg:w="5"/><text x="84.8023%" y="447.50"></text></g><g><title>ip_queue_xmit (3 samples, 0.01%)</title><rect x="84.5716%" y="437" width="0.0115%" height="15" fill="rgb(243,76,11)" fg:x="21970" fg:w="3"/><text x="84.8216%" y="447.50"></text></g><g><title>skb_clone (96 samples, 0.37%)</title><rect x="84.5831%" y="437" width="0.3695%" height="15" fill="rgb(245,21,50)" fg:x="21973" fg:w="96"/><text x="84.8331%" y="447.50"></text></g><g><title>tcp_established_options (11 samples, 0.04%)</title><rect x="84.9604%" y="437" width="0.0423%" height="15" fill="rgb(228,9,43)" fg:x="22071" fg:w="11"/><text x="85.2104%" y="447.50"></text></g><g><title>tcp_options_write (27 samples, 0.10%)</title><rect x="85.0027%" y="437" width="0.1039%" height="15" fill="rgb(208,100,47)" fg:x="22082" fg:w="27"/><text x="85.2527%" y="447.50"></text></g><g><title>tcp_rate_skb_sent (50 samples, 0.19%)</title><rect x="85.1066%" y="437" width="0.1925%" height="15" fill="rgb(232,26,8)" fg:x="22109" fg:w="50"/><text x="85.3566%" y="447.50"></text></g><g><title>__list_add_valid (5 samples, 0.02%)</title><rect x="85.4300%" y="421" width="0.0192%" height="15" fill="rgb(216,166,38)" fg:x="22193" fg:w="5"/><text x="85.6800%" y="431.50"></text></g><g><title>tcp_update_skb_after_send (49 samples, 0.19%)</title><rect x="85.2991%" y="437" width="0.1886%" height="15" fill="rgb(251,202,51)" fg:x="22159" fg:w="49"/><text x="85.5491%" y="447.50"></text></g><g><title>__list_del_entry_valid (10 samples, 0.04%)</title><rect x="85.4492%" y="421" width="0.0385%" height="15" fill="rgb(254,216,34)" fg:x="22198" fg:w="10"/><text x="85.6992%" y="431.50"></text></g><g><title>__tcp_transmit_skb (10,203 samples, 39.28%)</title><rect x="46.3893%" y="453" width="39.2755%" height="15" fill="rgb(251,32,27)" fg:x="12051" fg:w="10203"/><text x="46.6393%" y="463.50">__tcp_transmit_skb</text></g><g><title>tcp_v4_send_check (46 samples, 0.18%)</title><rect x="85.4877%" y="437" width="0.1771%" height="15" fill="rgb(208,127,28)" fg:x="22208" fg:w="46"/><text x="85.7377%" y="447.50"></text></g><g><title>ktime_get (69 samples, 0.27%)</title><rect x="85.6648%" y="453" width="0.2656%" height="15" fill="rgb(224,137,22)" fg:x="22254" fg:w="69"/><text x="85.9148%" y="463.50"></text></g><g><title>read_tsc (52 samples, 0.20%)</title><rect x="85.7302%" y="437" width="0.2002%" height="15" fill="rgb(254,70,32)" fg:x="22271" fg:w="52"/><text x="85.9802%" y="447.50"></text></g><g><title>tcp_check_space (61 samples, 0.23%)</title><rect x="85.9304%" y="453" width="0.2348%" height="15" fill="rgb(229,75,37)" fg:x="22323" fg:w="61"/><text x="86.1804%" y="463.50"></text></g><g><title>rb_insert_color (3 samples, 0.01%)</title><rect x="86.4000%" y="437" width="0.0115%" height="15" fill="rgb(252,64,23)" fg:x="22445" fg:w="3"/><text x="86.6500%" y="447.50"></text></g><g><title>__mod_timer (83 samples, 0.32%)</title><rect x="86.4193%" y="421" width="0.3195%" height="15" fill="rgb(232,162,48)" fg:x="22450" fg:w="83"/><text x="86.6693%" y="431.50"></text></g><g><title>sk_reset_timer (89 samples, 0.34%)</title><rect x="86.4116%" y="437" width="0.3426%" height="15" fill="rgb(246,160,12)" fg:x="22448" fg:w="89"/><text x="86.6616%" y="447.50"></text></g><g><title>mod_timer (4 samples, 0.02%)</title><rect x="86.7388%" y="421" width="0.0154%" height="15" fill="rgb(247,166,0)" fg:x="22533" fg:w="4"/><text x="86.9888%" y="431.50"></text></g><g><title>tcp_rbtree_insert (9 samples, 0.03%)</title><rect x="86.7542%" y="437" width="0.0346%" height="15" fill="rgb(249,219,21)" fg:x="22537" fg:w="9"/><text x="87.0042%" y="447.50"></text></g><g><title>tcp_event_new_data_sent (181 samples, 0.70%)</title><rect x="86.1729%" y="453" width="0.6967%" height="15" fill="rgb(205,209,3)" fg:x="22386" fg:w="181"/><text x="86.4229%" y="463.50"></text></g><g><title>tcp_rearm_rto (21 samples, 0.08%)</title><rect x="86.7888%" y="437" width="0.0808%" height="15" fill="rgb(243,44,1)" fg:x="22546" fg:w="21"/><text x="87.0388%" y="447.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (7 samples, 0.03%)</title><rect x="86.8697%" y="453" width="0.0269%" height="15" fill="rgb(206,159,16)" fg:x="22567" fg:w="7"/><text x="87.1197%" y="463.50"></text></g><g><title>tcp_small_queue_check.isra.0 (44 samples, 0.17%)</title><rect x="86.8966%" y="453" width="0.1694%" height="15" fill="rgb(244,77,30)" fg:x="22574" fg:w="44"/><text x="87.1466%" y="463.50"></text></g><g><title>__tcp_push_pending_frames (10,758 samples, 41.41%)</title><rect x="46.0082%" y="485" width="41.4120%" height="15" fill="rgb(218,69,12)" fg:x="11952" fg:w="10758"/><text x="46.2582%" y="495.50">__tcp_push_pending_frames</text></g><g><title>tcp_write_xmit (10,748 samples, 41.37%)</title><rect x="46.0467%" y="469" width="41.3735%" height="15" fill="rgb(212,87,7)" fg:x="11962" fg:w="10748"/><text x="46.2967%" y="479.50">tcp_write_xmit</text></g><g><title>tcp_tso_segs (92 samples, 0.35%)</title><rect x="87.0660%" y="453" width="0.3541%" height="15" fill="rgb(245,114,25)" fg:x="22618" fg:w="92"/><text x="87.3160%" y="463.50"></text></g><g><title>_copy_from_iter (182 samples, 0.70%)</title><rect x="87.4201%" y="485" width="0.7006%" height="15" fill="rgb(210,61,42)" fg:x="22710" fg:w="182"/><text x="87.6701%" y="495.50"></text></g><g><title>copyin (145 samples, 0.56%)</title><rect x="87.5626%" y="469" width="0.5582%" height="15" fill="rgb(211,52,33)" fg:x="22747" fg:w="145"/><text x="87.8126%" y="479.50"></text></g><g><title>rep_movs_alternative (110 samples, 0.42%)</title><rect x="87.6973%" y="453" width="0.4234%" height="15" fill="rgb(234,58,33)" fg:x="22782" fg:w="110"/><text x="87.9473%" y="463.50"></text></g><g><title>__rmqueue_pcplist (5 samples, 0.02%)</title><rect x="88.4056%" y="421" width="0.0192%" height="15" fill="rgb(220,115,36)" fg:x="22966" fg:w="5"/><text x="88.6556%" y="431.50"></text></g><g><title>get_page_from_freelist (69 samples, 0.27%)</title><rect x="88.3825%" y="437" width="0.2656%" height="15" fill="rgb(243,153,54)" fg:x="22960" fg:w="69"/><text x="88.6325%" y="447.50"></text></g><g><title>clear_page_erms (57 samples, 0.22%)</title><rect x="88.4287%" y="421" width="0.2194%" height="15" fill="rgb(251,47,18)" fg:x="22972" fg:w="57"/><text x="88.6787%" y="431.50"></text></g><g><title>sk_page_frag_refill (138 samples, 0.53%)</title><rect x="88.1207%" y="485" width="0.5312%" height="15" fill="rgb(242,102,42)" fg:x="22892" fg:w="138"/><text x="88.3707%" y="495.50"></text></g><g><title>skb_page_frag_refill (132 samples, 0.51%)</title><rect x="88.1438%" y="469" width="0.5081%" height="15" fill="rgb(234,31,38)" fg:x="22898" fg:w="132"/><text x="88.3938%" y="479.50"></text></g><g><title>__alloc_pages (70 samples, 0.27%)</title><rect x="88.3825%" y="453" width="0.2695%" height="15" fill="rgb(221,117,51)" fg:x="22960" fg:w="70"/><text x="88.6325%" y="463.50"></text></g><g><title>tcp_push (10 samples, 0.04%)</title><rect x="88.6519%" y="485" width="0.0385%" height="15" fill="rgb(212,20,18)" fg:x="23030" fg:w="10"/><text x="88.9019%" y="495.50"></text></g><g><title>tcp_rate_check_app_limited (19 samples, 0.07%)</title><rect x="88.6904%" y="485" width="0.0731%" height="15" fill="rgb(245,133,36)" fg:x="23040" fg:w="19"/><text x="88.9404%" y="495.50"></text></g><g><title>ipv4_mtu (50 samples, 0.19%)</title><rect x="89.6181%" y="453" width="0.1925%" height="15" fill="rgb(212,6,19)" fg:x="23281" fg:w="50"/><text x="89.8681%" y="463.50"></text></g><g><title>tcp_send_mss (285 samples, 1.10%)</title><rect x="88.7636%" y="485" width="1.0971%" height="15" fill="rgb(218,1,36)" fg:x="23059" fg:w="285"/><text x="89.0136%" y="495.50"></text></g><g><title>tcp_current_mss (257 samples, 0.99%)</title><rect x="88.8714%" y="469" width="0.9893%" height="15" fill="rgb(246,84,54)" fg:x="23087" fg:w="257"/><text x="89.1214%" y="479.50"></text></g><g><title>tcp_established_options (13 samples, 0.05%)</title><rect x="89.8106%" y="453" width="0.0500%" height="15" fill="rgb(242,110,6)" fg:x="23331" fg:w="13"/><text x="90.0606%" y="463.50"></text></g><g><title>tcp_skb_entail (69 samples, 0.27%)</title><rect x="89.8607%" y="485" width="0.2656%" height="15" fill="rgb(214,47,5)" fg:x="23344" fg:w="69"/><text x="90.1107%" y="495.50"></text></g><g><title>tcp_chrono_start (7 samples, 0.03%)</title><rect x="90.0993%" y="469" width="0.0269%" height="15" fill="rgb(218,159,25)" fg:x="23406" fg:w="7"/><text x="90.3493%" y="479.50"></text></g><g><title>__build_skb_around (36 samples, 0.14%)</title><rect x="90.5497%" y="453" width="0.1386%" height="15" fill="rgb(215,211,28)" fg:x="23523" fg:w="36"/><text x="90.7997%" y="463.50"></text></g><g><title>memcg_slab_post_alloc_hook (10 samples, 0.04%)</title><rect x="91.3465%" y="421" width="0.0385%" height="15" fill="rgb(238,59,32)" fg:x="23730" fg:w="10"/><text x="91.5965%" y="431.50"></text></g><g><title>memset_orig (109 samples, 0.42%)</title><rect x="91.3850%" y="421" width="0.4196%" height="15" fill="rgb(226,82,3)" fg:x="23740" fg:w="109"/><text x="91.6350%" y="431.50"></text></g><g><title>kmalloc_reserve (293 samples, 1.13%)</title><rect x="90.6883%" y="453" width="1.1279%" height="15" fill="rgb(240,164,32)" fg:x="23559" fg:w="293"/><text x="90.9383%" y="463.50"></text></g><g><title>kmem_cache_alloc_node (260 samples, 1.00%)</title><rect x="90.8153%" y="437" width="1.0008%" height="15" fill="rgb(232,46,7)" fg:x="23592" fg:w="260"/><text x="91.0653%" y="447.50"></text></g><g><title>should_failslab (3 samples, 0.01%)</title><rect x="91.8046%" y="421" width="0.0115%" height="15" fill="rgb(229,129,53)" fg:x="23849" fg:w="3"/><text x="92.0546%" y="431.50"></text></g><g><title>memcg_slab_post_alloc_hook (39 samples, 0.15%)</title><rect x="92.2704%" y="437" width="0.1501%" height="15" fill="rgb(234,188,29)" fg:x="23970" fg:w="39"/><text x="92.5204%" y="447.50"></text></g><g><title>memset_orig (92 samples, 0.35%)</title><rect x="92.4205%" y="437" width="0.3541%" height="15" fill="rgb(246,141,4)" fg:x="24009" fg:w="92"/><text x="92.6705%" y="447.50"></text></g><g><title>__alloc_skb (669 samples, 2.58%)</title><rect x="90.2032%" y="469" width="2.5753%" height="15" fill="rgb(229,23,39)" fg:x="23433" fg:w="669"/><text x="90.4532%" y="479.50">__..</text></g><g><title>kmem_cache_alloc_node (250 samples, 0.96%)</title><rect x="91.8162%" y="453" width="0.9624%" height="15" fill="rgb(206,12,3)" fg:x="23852" fg:w="250"/><text x="92.0662%" y="463.50"></text></g><g><title>mod_memcg_state (67 samples, 0.26%)</title><rect x="92.9055%" y="453" width="0.2579%" height="15" fill="rgb(252,226,20)" fg:x="24135" fg:w="67"/><text x="93.1555%" y="463.50"></text></g><g><title>__mod_memcg_state (30 samples, 0.12%)</title><rect x="93.0480%" y="437" width="0.1155%" height="15" fill="rgb(216,123,35)" fg:x="24172" fg:w="30"/><text x="93.2980%" y="447.50"></text></g><g><title>cgroup_rstat_updated (13 samples, 0.05%)</title><rect x="93.1134%" y="421" width="0.0500%" height="15" fill="rgb(212,68,40)" fg:x="24189" fg:w="13"/><text x="93.3634%" y="431.50"></text></g><g><title>mem_cgroup_charge_skmem (146 samples, 0.56%)</title><rect x="92.7785%" y="469" width="0.5620%" height="15" fill="rgb(254,125,32)" fg:x="24102" fg:w="146"/><text x="93.0285%" y="479.50"></text></g><g><title>try_charge_memcg (46 samples, 0.18%)</title><rect x="93.1634%" y="453" width="0.1771%" height="15" fill="rgb(253,97,22)" fg:x="24202" fg:w="46"/><text x="93.4134%" y="463.50"></text></g><g><title>tcp_stream_alloc_skb (869 samples, 3.35%)</title><rect x="90.1263%" y="485" width="3.3451%" height="15" fill="rgb(241,101,14)" fg:x="23413" fg:w="869"/><text x="90.3763%" y="495.50">tcp..</text></g><g><title>sk_forced_mem_schedule (34 samples, 0.13%)</title><rect x="93.3405%" y="469" width="0.1309%" height="15" fill="rgb(238,103,29)" fg:x="24248" fg:w="34"/><text x="93.5905%" y="479.50"></text></g><g><title>tcp_stream_memory_free (5 samples, 0.02%)</title><rect x="93.4714%" y="485" width="0.0192%" height="15" fill="rgb(233,195,47)" fg:x="24282" fg:w="5"/><text x="93.7214%" y="495.50"></text></g><g><title>tcp_tx_timestamp (7 samples, 0.03%)</title><rect x="93.4906%" y="485" width="0.0269%" height="15" fill="rgb(246,218,30)" fg:x="24287" fg:w="7"/><text x="93.7406%" y="495.50"></text></g><g><title>sock_sendmsg (13,145 samples, 50.60%)</title><rect x="42.9594%" y="533" width="50.6005%" height="15" fill="rgb(219,145,47)" fg:x="11160" fg:w="13145"/><text x="43.2094%" y="543.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (13,041 samples, 50.20%)</title><rect x="43.3598%" y="517" width="50.2002%" height="15" fill="rgb(243,12,26)" fg:x="11264" fg:w="13041"/><text x="43.6098%" y="527.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (12,895 samples, 49.64%)</title><rect x="43.9218%" y="501" width="49.6382%" height="15" fill="rgb(214,87,16)" fg:x="11410" fg:w="12895"/><text x="44.1718%" y="511.50">tcp_sendmsg_locked</text></g><g><title>tcp_wmem_schedule (11 samples, 0.04%)</title><rect x="93.5176%" y="485" width="0.0423%" height="15" fill="rgb(208,99,42)" fg:x="24294" fg:w="11"/><text x="93.7676%" y="495.50"></text></g><g><title>__x64_sys_sendto (13,361 samples, 51.43%)</title><rect x="42.3397%" y="565" width="51.4320%" height="15" fill="rgb(253,99,2)" fg:x="10999" fg:w="13361"/><text x="42.5897%" y="575.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (13,356 samples, 51.41%)</title><rect x="42.3589%" y="549" width="51.4127%" height="15" fill="rgb(220,168,23)" fg:x="11004" fg:w="13356"/><text x="42.6089%" y="559.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (55 samples, 0.21%)</title><rect x="93.5599%" y="533" width="0.2117%" height="15" fill="rgb(242,38,24)" fg:x="24305" fg:w="55"/><text x="93.8099%" y="543.50"></text></g><g><title>__fget_light (45 samples, 0.17%)</title><rect x="93.5984%" y="517" width="0.1732%" height="15" fill="rgb(225,182,9)" fg:x="24315" fg:w="45"/><text x="93.8484%" y="527.50"></text></g><g><title>syscall_enter_from_user_mode (50 samples, 0.19%)</title><rect x="93.7717%" y="565" width="0.1925%" height="15" fill="rgb(243,178,37)" fg:x="24360" fg:w="50"/><text x="94.0217%" y="575.50"></text></g><g><title>__get_user_8 (80 samples, 0.31%)</title><rect x="95.9081%" y="517" width="0.3080%" height="15" fill="rgb(232,139,19)" fg:x="24915" fg:w="80"/><text x="96.1581%" y="527.50"></text></g><g><title>__rseq_handle_notify_resume (292 samples, 1.12%)</title><rect x="95.2498%" y="533" width="1.1240%" height="15" fill="rgb(225,201,24)" fg:x="24744" fg:w="292"/><text x="95.4998%" y="543.50"></text></g><g><title>__put_user_8 (41 samples, 0.16%)</title><rect x="96.2160%" y="517" width="0.1578%" height="15" fill="rgb(221,47,46)" fg:x="24995" fg:w="41"/><text x="96.4660%" y="527.50"></text></g><g><title>blkcg_maybe_throttle_current (41 samples, 0.16%)</title><rect x="96.3739%" y="533" width="0.1578%" height="15" fill="rgb(249,23,13)" fg:x="25036" fg:w="41"/><text x="96.6239%" y="543.50"></text></g><g><title>mem_cgroup_handle_over_high (43 samples, 0.17%)</title><rect x="96.5317%" y="533" width="0.1655%" height="15" fill="rgb(219,9,5)" fg:x="25077" fg:w="43"/><text x="96.7817%" y="543.50"></text></g><g><title>exit_to_user_mode_prepare (733 samples, 2.82%)</title><rect x="94.0719%" y="549" width="2.8216%" height="15" fill="rgb(254,171,16)" fg:x="24438" fg:w="733"/><text x="94.3219%" y="559.50">ex..</text></g><g><title>switch_fpu_return (51 samples, 0.20%)</title><rect x="96.6972%" y="533" width="0.1963%" height="15" fill="rgb(230,171,20)" fg:x="25120" fg:w="51"/><text x="96.9472%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (24,699 samples, 95.08%)</title><rect x="1.9055%" y="597" width="95.0766%" height="15" fill="rgb(210,71,41)" fg:x="495" fg:w="24699"/><text x="2.1555%" y="607.50">entry_SYSCALL_64</text></g><g><title>do_syscall_64 (24,485 samples, 94.25%)</title><rect x="2.7292%" y="581" width="94.2528%" height="15" fill="rgb(206,173,20)" fg:x="709" fg:w="24485"/><text x="2.9792%" y="591.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (784 samples, 3.02%)</title><rect x="93.9641%" y="565" width="3.0179%" height="15" fill="rgb(233,88,34)" fg:x="24410" fg:w="784"/><text x="94.2141%" y="575.50">sys..</text></g><g><title>syscall_exit_to_user_mode_prepare (23 samples, 0.09%)</title><rect x="96.8935%" y="549" width="0.0885%" height="15" fill="rgb(223,209,46)" fg:x="25171" fg:w="23"/><text x="97.1435%" y="559.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (28 samples, 0.11%)</title><rect x="96.9821%" y="597" width="0.1078%" height="15" fill="rgb(250,43,18)" fg:x="25194" fg:w="28"/><text x="97.2321%" y="607.50"></text></g><g><title>core::core_arch::x86::sse42::_mm_cmpestri (41 samples, 0.16%)</title><rect x="97.6403%" y="565" width="0.1578%" height="15" fill="rgb(208,13,10)" fg:x="25365" fg:w="41"/><text x="97.8903%" y="575.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (12 samples, 0.05%)</title><rect x="97.7519%" y="549" width="0.0462%" height="15" fill="rgb(212,200,36)" fg:x="25394" fg:w="12"/><text x="98.0019%" y="559.50"></text></g><g><title>faf::http_request_path::parse_request_path_pipelined_simd (185 samples, 0.71%)</title><rect x="97.0898%" y="597" width="0.7121%" height="15" fill="rgb(225,90,30)" fg:x="25222" fg:w="185"/><text x="97.3398%" y="607.50"></text></g><g><title>faf::http_request_path::find_sequence_simd (68 samples, 0.26%)</title><rect x="97.5402%" y="581" width="0.2618%" height="15" fill="rgb(236,182,39)" fg:x="25339" fg:w="68"/><text x="97.7902%" y="591.50"></text></g><g><title>faf::syscall::sys_call4 (142 samples, 0.55%)</title><rect x="97.8020%" y="597" width="0.5466%" height="15" fill="rgb(212,144,35)" fg:x="25407" fg:w="142"/><text x="98.0520%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (141 samples, 0.54%)</title><rect x="97.8058%" y="581" width="0.5428%" height="15" fill="rgb(228,63,44)" fg:x="25408" fg:w="141"/><text x="98.0558%" y="591.50"></text></g><g><title>faf::syscall::sys_call6 (118 samples, 0.45%)</title><rect x="98.3486%" y="597" width="0.4542%" height="15" fill="rgb(228,109,6)" fg:x="25549" fg:w="118"/><text x="98.5986%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (116 samples, 0.45%)</title><rect x="98.3563%" y="581" width="0.4465%" height="15" fill="rgb(238,117,24)" fg:x="25551" fg:w="116"/><text x="98.6063%" y="591.50"></text></g><g><title>[unknown] (25,638 samples, 98.69%)</title><rect x="0.4157%" y="629" width="98.6912%" height="15" fill="rgb(242,26,26)" fg:x="108" fg:w="25638"/><text x="0.6657%" y="639.50">[unknown]</text></g><g><title>faf::epoll::threaded_worker (25,638 samples, 98.69%)</title><rect x="0.4157%" y="613" width="98.6912%" height="15" fill="rgb(221,92,48)" fg:x="108" fg:w="25638"/><text x="0.6657%" y="623.50">faf::epoll::threaded_worker</text></g><g><title>syscall_return_via_sysret (79 samples, 0.30%)</title><rect x="98.8028%" y="597" width="0.3041%" height="15" fill="rgb(209,209,32)" fg:x="25667" fg:w="79"/><text x="99.0528%" y="607.50"></text></g><g><title>entry_SYSCALL_64 (86 samples, 0.33%)</title><rect x="99.1108%" y="629" width="0.3310%" height="15" fill="rgb(221,70,22)" fg:x="25747" fg:w="86"/><text x="99.3608%" y="639.50"></text></g><g><title>faf_ex::cb (117 samples, 0.45%)</title><rect x="99.4418%" y="629" width="0.4504%" height="15" fill="rgb(248,145,5)" fg:x="25833" fg:w="117"/><text x="99.6918%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (83 samples, 0.32%)</title><rect x="99.5727%" y="613" width="0.3195%" height="15" fill="rgb(226,116,26)" fg:x="25867" fg:w="83"/><text x="99.8227%" y="623.50"></text></g><g><title>faf7 (25,865 samples, 99.57%)</title><rect x="0.4157%" y="645" width="99.5650%" height="15" fill="rgb(244,5,17)" fg:x="108" fg:w="25865"/><text x="0.6657%" y="655.50">faf7</text></g><g><title>syscall_return_via_sysret (23 samples, 0.09%)</title><rect x="99.8922%" y="629" width="0.0885%" height="15" fill="rgb(252,159,33)" fg:x="25950" fg:w="23"/><text x="100.1422%" y="639.50"></text></g><g><title>perf_ctx_enable (4 samples, 0.02%)</title><rect x="99.9808%" y="501" width="0.0154%" height="15" fill="rgb(206,71,0)" fg:x="25973" fg:w="4"/><text x="100.2308%" y="511.50"></text></g><g><title>__intel_pmu_enable_all.isra.0 (4 samples, 0.02%)</title><rect x="99.9808%" y="485" width="0.0154%" height="15" fill="rgb(233,118,54)" fg:x="25973" fg:w="4"/><text x="100.2308%" y="495.50"></text></g><g><title>native_write_msr (4 samples, 0.02%)</title><rect x="99.9808%" y="469" width="0.0154%" height="15" fill="rgb(234,83,48)" fg:x="25973" fg:w="4"/><text x="100.2308%" y="479.50"></text></g><g><title>all (25,978 samples, 100%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(228,3,54)" fg:x="0" fg:w="25978"/><text x="0.2500%" y="671.50"></text></g><g><title>perf-exec (5 samples, 0.02%)</title><rect x="99.9808%" y="645" width="0.0192%" height="15" fill="rgb(226,155,13)" fg:x="25973" fg:w="5"/><text x="100.2308%" y="655.50"></text></g><g><title>entry_SYSCALL_64 (5 samples, 0.02%)</title><rect x="99.9808%" y="629" width="0.0192%" height="15" fill="rgb(241,28,37)" fg:x="25973" fg:w="5"/><text x="100.2308%" y="639.50"></text></g><g><title>do_syscall_64 (5 samples, 0.02%)</title><rect x="99.9808%" y="613" width="0.0192%" height="15" fill="rgb(233,93,10)" fg:x="25973" fg:w="5"/><text x="100.2308%" y="623.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.02%)</title><rect x="99.9808%" y="597" width="0.0192%" height="15" fill="rgb(225,113,19)" fg:x="25973" fg:w="5"/><text x="100.2308%" y="607.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.02%)</title><rect x="99.9808%" y="581" width="0.0192%" height="15" fill="rgb(241,2,18)" fg:x="25973" fg:w="5"/><text x="100.2308%" y="591.50"></text></g><g><title>bprm_execve (5 samples, 0.02%)</title><rect x="99.9808%" y="565" width="0.0192%" height="15" fill="rgb(228,207,21)" fg:x="25973" fg:w="5"/><text x="100.2308%" y="575.50"></text></g><g><title>load_elf_binary (5 samples, 0.02%)</title><rect x="99.9808%" y="549" width="0.0192%" height="15" fill="rgb(213,211,35)" fg:x="25973" fg:w="5"/><text x="100.2308%" y="559.50"></text></g><g><title>begin_new_exec (5 samples, 0.02%)</title><rect x="99.9808%" y="533" width="0.0192%" height="15" fill="rgb(209,83,10)" fg:x="25973" fg:w="5"/><text x="100.2308%" y="543.50"></text></g><g><title>perf_event_exec (5 samples, 0.02%)</title><rect x="99.9808%" y="517" width="0.0192%" height="15" fill="rgb(209,164,1)" fg:x="25973" fg:w="5"/><text x="100.2308%" y="527.50"></text></g></svg></svg>